{"ast":null,"code":"import React,{useState,useRef}from'react';import{apiService}from'../api/apiService';import'../styles/BulkOperations.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BulkOperations=_ref=>{let{userRole}=_ref;const[activeTab,setActiveTab]=useState('import');const[importType,setImportType]=useState('FARMER');const[selectedFile,setSelectedFile]=useState(null);const[importStatus,setImportStatus]=useState(null);const[isImporting,setIsImporting]=useState(false);const[isExporting,setIsExporting]=useState(false);const[exportFilters,setExportFilters]=useState({format:'EXCEL',assignedEmployeeEmail:'',location:'',kycStatus:'',fromDate:'',toDate:''});const[assignmentData,setAssignmentData]=useState({farmerIds:[],employeeId:'',assignmentType:'MANUAL'});const fileInputRef=useRef();const handleFileSelect=event=>{const file=event.target.files[0];if(file){const allowedTypes=['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/vnd.ms-excel','text/csv'];if(allowedTypes.includes(file.type)||file.name.endsWith('.csv')){setSelectedFile(file);}else{alert('Please select a valid Excel (.xlsx, .xls) or CSV file.');event.target.value='';}}};const downloadTemplate=async type=>{try{const response=await apiService.downloadTemplate(type.toLowerCase());const blob=new Blob([response],{type:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=`${type.toLowerCase()}_import_template.xlsx`;document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);document.body.removeChild(a);}catch(error){console.error('Error downloading template:',error);alert('Failed to download template');}};const handleImport=async()=>{if(!selectedFile){alert('Please select a file to import');return;}setIsImporting(true);try{const formData=new FormData();formData.append('file',selectedFile);formData.append('autoAssign',false);formData.append('assignmentStrategy','MANUAL');const response=await apiService.bulkImport(importType.toLowerCase(),formData);setImportStatus(response);if(response.status==='PROCESSING'){// Poll for status updates\npollImportStatus(response.importId);}}catch(error){console.error('Import error:',error);alert('Import failed: '+error.message);}finally{setIsImporting(false);}};const pollImportStatus=async importId=>{const maxAttempts=30;// 5 minutes with 10-second intervals\nlet attempts=0;const poll=async()=>{try{const status=await apiService.getImportStatus(importId);setImportStatus(status);if(status.status==='COMPLETED'||status.status==='FAILED'){return;}attempts++;if(attempts<maxAttempts){setTimeout(poll,10000);// Poll every 10 seconds\n}}catch(error){console.error('Error polling import status:',error);}};setTimeout(poll,10000);};const handleExport=async()=>{setIsExporting(true);try{const response=await apiService.bulkExport(importType.toLowerCase(),exportFilters);const blob=new Blob([response],{type:exportFilters.format==='EXCEL'?'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':'text/csv'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=`${importType.toLowerCase()}_export_${Date.now()}.${exportFilters.format.toLowerCase()}`;document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);document.body.removeChild(a);}catch(error){console.error('Export error:',error);alert('Export failed: '+error.message);}finally{setIsExporting(false);}};const handleBulkAssignment=async()=>{if(!assignmentData.farmerIds.length||!assignmentData.employeeId){alert('Please select farmers and an employee for assignment');return;}try{let response;switch(assignmentData.assignmentType){case'MANUAL':response=await apiService.bulkAssignFarmersToEmployee(assignmentData.farmerIds,assignmentData.employeeId);break;case'LOCATION':response=await apiService.bulkAssignFarmersByLocation(assignmentData.location,assignmentData.employeeId);break;case'ROUND_ROBIN':response=await apiService.bulkAssignFarmersRoundRobin(assignmentData.farmerIds);break;default:throw new Error('Invalid assignment type');}alert('Bulk assignment completed successfully');}catch(error){console.error('Bulk assignment error:',error);alert('Bulk assignment failed: '+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bulk-operations\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bulk-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Bulk Operations\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Import and export large datasets efficiently\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bulk-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab ${activeTab==='import'?'active':''}`,onClick:()=>setActiveTab('import'),children:\"\\uD83D\\uDCE5 Bulk Import\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab ${activeTab==='export'?'active':''}`,onClick:()=>setActiveTab('export'),children:\"\\uD83D\\uDCE4 Bulk Export\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab ${activeTab==='assignment'?'active':''}`,onClick:()=>setActiveTab('assignment'),children:\"\\uD83D\\uDC65 Bulk Assignment\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bulk-content\",children:[activeTab==='import'&&/*#__PURE__*/_jsxs(\"div\",{className:\"import-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Bulk Import\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"template-downloads\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"template-btn\",onClick:()=>downloadTemplate('FARMER'),children:\"\\uD83D\\uDCC4 Download Farmer Template\"}),userRole==='SUPER_ADMIN'&&/*#__PURE__*/_jsx(\"button\",{className:\"template-btn\",onClick:()=>downloadTemplate('EMPLOYEE'),children:\"\\uD83D\\uDCC4 Download Employee Template\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"import-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Import Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:importType,onChange:e=>setImportType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"FARMER\",children:\"Farmer Data\"}),userRole==='SUPER_ADMIN'&&/*#__PURE__*/_jsx(\"option\",{value:\"EMPLOYEE\",children:\"Employee Data\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select File:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:handleFileSelect,accept:\".xlsx,.xls,.csv\",className:\"file-input\"}),selectedFile&&/*#__PURE__*/_jsxs(\"p\",{className:\"file-info\",children:[\"Selected: \",selectedFile.name,\" (\",(selectedFile.size/1024/1024).toFixed(2),\" MB)\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"import-btn\",onClick:handleImport,disabled:!selectedFile||isImporting,children:isImporting?'ðŸ”„ Importing...':'ðŸ“¥ Start Import'})]}),importStatus&&/*#__PURE__*/_jsxs(\"div\",{className:`import-status ${importStatus.status.toLowerCase()}`,children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Import Status: \",importStatus.status]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Records:\"}),\" \",importStatus.totalRecords||0]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Successful:\"}),\" \",importStatus.successfulImports||0]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Failed:\"}),\" \",importStatus.failedImports||0]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Skipped:\"}),\" \",importStatus.skippedRecords||0]}),importStatus.message&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Message:\"}),\" \",importStatus.message]})]}),importStatus.errors&&importStatus.errors.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"import-errors\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[\"Errors (\",importStatus.errors.length,\"):\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-list\",children:[importStatus.errors.slice(0,10).map((error,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"error-item\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Row \",error.rowNumber,\": \",error.fieldName]}),/*#__PURE__*/_jsx(\"span\",{children:error.errorMessage})]},index)),importStatus.errors.length>10&&/*#__PURE__*/_jsxs(\"p\",{children:[\"... and \",importStatus.errors.length-10,\" more errors\"]})]})]})]})]}),activeTab==='export'&&/*#__PURE__*/_jsxs(\"div\",{className:\"export-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Bulk Export\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"export-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Export Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:importType,onChange:e=>setImportType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"FARMER\",children:\"Farmer Data\"}),userRole==='SUPER_ADMIN'&&/*#__PURE__*/_jsx(\"option\",{value:\"EMPLOYEE\",children:\"Employee Data\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Format:\"}),/*#__PURE__*/_jsxs(\"select\",{value:exportFilters.format,onChange:e=>setExportFilters({...exportFilters,format:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"EXCEL\",children:\"Excel (.xlsx)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CSV\",children:\"CSV (.csv)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Assigned Employee Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:exportFilters.assignedEmployeeEmail,onChange:e=>setExportFilters({...exportFilters,assignedEmployeeEmail:e.target.value}),placeholder:\"Filter by assigned employee\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Location (District):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:exportFilters.location,onChange:e=>setExportFilters({...exportFilters,location:e.target.value}),placeholder:\"Filter by district\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"KYC Status:\"}),/*#__PURE__*/_jsxs(\"select\",{value:exportFilters.kycStatus,onChange:e=>setExportFilters({...exportFilters,kycStatus:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Statuses\"}),/*#__PURE__*/_jsx(\"option\",{value:\"PENDING\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"APPROVED\",children:\"Approved\"}),/*#__PURE__*/_jsx(\"option\",{value:\"REJECTED\",children:\"Rejected\"}),/*#__PURE__*/_jsx(\"option\",{value:\"REFER_BACK\",children:\"Refer Back\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"From Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:exportFilters.fromDate,onChange:e=>setExportFilters({...exportFilters,fromDate:e.target.value})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"To Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:exportFilters.toDate,onChange:e=>setExportFilters({...exportFilters,toDate:e.target.value})})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"export-btn\",onClick:handleExport,disabled:isExporting,children:isExporting?'ðŸ”„ Exporting...':'ðŸ“¤ Export Data'})]})]}),activeTab==='assignment'&&/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Bulk Assignment\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Assignment Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:assignmentData.assignmentType,onChange:e=>setAssignmentData({...assignmentData,assignmentType:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"MANUAL\",children:\"Manual Assignment\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LOCATION\",children:\"By Location\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ROUND_ROBIN\",children:\"Round Robin\"})]})]}),assignmentData.assignmentType==='MANUAL'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Farmer IDs (comma-separated):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:assignmentData.farmerIds.join(','),onChange:e=>setAssignmentData({...assignmentData,farmerIds:e.target.value.split(',').map(id=>id.trim()).filter(id=>id)}),placeholder:\"1, 2, 3, 4, 5\"})]}),assignmentData.assignmentType==='LOCATION'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Location (District):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:assignmentData.location,onChange:e=>setAssignmentData({...assignmentData,location:e.target.value}),placeholder:\"Enter district name\"})]}),assignmentData.assignmentType==='ROUND_ROBIN'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Farmer IDs (comma-separated):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:assignmentData.farmerIds.join(','),onChange:e=>setAssignmentData({...assignmentData,farmerIds:e.target.value.split(',').map(id=>id.trim()).filter(id=>id)}),placeholder:\"1, 2, 3, 4, 5\"})]}),assignmentData.assignmentType!=='ROUND_ROBIN'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Employee ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:assignmentData.employeeId,onChange:e=>setAssignmentData({...assignmentData,employeeId:e.target.value}),placeholder:\"Enter employee ID\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"assignment-btn\",onClick:handleBulkAssignment,children:\"\\uD83D\\uDC65 Assign Farmers\"})]})]})]})]});};export default BulkOperations;","map":{"version":3,"names":["React","useState","useRef","apiService","jsx","_jsx","jsxs","_jsxs","BulkOperations","_ref","userRole","activeTab","setActiveTab","importType","setImportType","selectedFile","setSelectedFile","importStatus","setImportStatus","isImporting","setIsImporting","isExporting","setIsExporting","exportFilters","setExportFilters","format","assignedEmployeeEmail","location","kycStatus","fromDate","toDate","assignmentData","setAssignmentData","farmerIds","employeeId","assignmentType","fileInputRef","handleFileSelect","event","file","target","files","allowedTypes","includes","type","name","endsWith","alert","value","downloadTemplate","response","toLowerCase","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","error","console","handleImport","formData","FormData","append","bulkImport","status","pollImportStatus","importId","message","maxAttempts","attempts","poll","getImportStatus","setTimeout","handleExport","bulkExport","Date","now","handleBulkAssignment","length","bulkAssignFarmersToEmployee","bulkAssignFarmersByLocation","bulkAssignFarmersRoundRobin","Error","className","children","onClick","onChange","e","ref","accept","size","toFixed","disabled","totalRecords","successfulImports","failedImports","skippedRecords","errors","slice","map","index","rowNumber","fieldName","errorMessage","placeholder","join","split","id","trim","filter"],"sources":["C:/karthik cc/Working-frontend/src/components/BulkOperations.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { apiService } from '../api/apiService';\r\nimport '../styles/BulkOperations.css';\r\n\r\nconst BulkOperations = ({ userRole }) => {\r\n  const [activeTab, setActiveTab] = useState('import');\r\n  const [importType, setImportType] = useState('FARMER');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [importStatus, setImportStatus] = useState(null);\r\n  const [isImporting, setIsImporting] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportFilters, setExportFilters] = useState({\r\n    format: 'EXCEL',\r\n    assignedEmployeeEmail: '',\r\n    location: '',\r\n    kycStatus: '',\r\n    fromDate: '',\r\n    toDate: ''\r\n  });\r\n  const [assignmentData, setAssignmentData] = useState({\r\n    farmerIds: [],\r\n    employeeId: '',\r\n    assignmentType: 'MANUAL'\r\n  });\r\n  const fileInputRef = useRef();\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const allowedTypes = [\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        'application/vnd.ms-excel',\r\n        'text/csv'\r\n      ];\r\n      \r\n      if (allowedTypes.includes(file.type) || file.name.endsWith('.csv')) {\r\n        setSelectedFile(file);\r\n      } else {\r\n        alert('Please select a valid Excel (.xlsx, .xls) or CSV file.');\r\n        event.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const downloadTemplate = async (type) => {\r\n    try {\r\n      const response = await apiService.downloadTemplate(type.toLowerCase());\r\n      const blob = new Blob([response], { \r\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \r\n      });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `${type.toLowerCase()}_import_template.xlsx`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Error downloading template:', error);\r\n      alert('Failed to download template');\r\n    }\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to import');\r\n      return;\r\n    }\r\n\r\n    setIsImporting(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      formData.append('autoAssign', false);\r\n      formData.append('assignmentStrategy', 'MANUAL');\r\n\r\n      const response = await apiService.bulkImport(importType.toLowerCase(), formData);\r\n      setImportStatus(response);\r\n      \r\n      if (response.status === 'PROCESSING') {\r\n        // Poll for status updates\r\n        pollImportStatus(response.importId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Import error:', error);\r\n      alert('Import failed: ' + error.message);\r\n    } finally {\r\n      setIsImporting(false);\r\n    }\r\n  };\r\n\r\n  const pollImportStatus = async (importId) => {\r\n    const maxAttempts = 30; // 5 minutes with 10-second intervals\r\n    let attempts = 0;\r\n\r\n    const poll = async () => {\r\n      try {\r\n        const status = await apiService.getImportStatus(importId);\r\n        setImportStatus(status);\r\n\r\n        if (status.status === 'COMPLETED' || status.status === 'FAILED') {\r\n          return;\r\n        }\r\n\r\n        attempts++;\r\n        if (attempts < maxAttempts) {\r\n          setTimeout(poll, 10000); // Poll every 10 seconds\r\n        }\r\n      } catch (error) {\r\n        console.error('Error polling import status:', error);\r\n      }\r\n    };\r\n\r\n    setTimeout(poll, 10000);\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      const response = await apiService.bulkExport(importType.toLowerCase(), exportFilters);\r\n      \r\n      const blob = new Blob([response], { \r\n        type: exportFilters.format === 'EXCEL' \r\n          ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n          : 'text/csv'\r\n      });\r\n      \r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `${importType.toLowerCase()}_export_${Date.now()}.${exportFilters.format.toLowerCase()}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Export error:', error);\r\n      alert('Export failed: ' + error.message);\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const handleBulkAssignment = async () => {\r\n    if (!assignmentData.farmerIds.length || !assignmentData.employeeId) {\r\n      alert('Please select farmers and an employee for assignment');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let response;\r\n      switch (assignmentData.assignmentType) {\r\n        case 'MANUAL':\r\n          response = await apiService.bulkAssignFarmersToEmployee(\r\n            assignmentData.farmerIds, \r\n            assignmentData.employeeId\r\n          );\r\n          break;\r\n        case 'LOCATION':\r\n          response = await apiService.bulkAssignFarmersByLocation(\r\n            assignmentData.location, \r\n            assignmentData.employeeId\r\n          );\r\n          break;\r\n        case 'ROUND_ROBIN':\r\n          response = await apiService.bulkAssignFarmersRoundRobin(\r\n            assignmentData.farmerIds\r\n          );\r\n          break;\r\n        default:\r\n          throw new Error('Invalid assignment type');\r\n      }\r\n      \r\n      alert('Bulk assignment completed successfully');\r\n    } catch (error) {\r\n      console.error('Bulk assignment error:', error);\r\n      alert('Bulk assignment failed: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bulk-operations\">\r\n      <div className=\"bulk-header\">\r\n        <h2>Bulk Operations</h2>\r\n        <p>Import and export large datasets efficiently</p>\r\n      </div>\r\n\r\n      <div className=\"bulk-tabs\">\r\n        <button \r\n          className={`tab ${activeTab === 'import' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('import')}\r\n        >\r\n          ðŸ“¥ Bulk Import\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'export' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('export')}\r\n        >\r\n          ðŸ“¤ Bulk Export\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'assignment' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('assignment')}\r\n        >\r\n          ðŸ‘¥ Bulk Assignment\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"bulk-content\">\r\n        {activeTab === 'import' && (\r\n          <div className=\"import-section\">\r\n            <div className=\"section-header\">\r\n              <h3>Bulk Import</h3>\r\n              <div className=\"template-downloads\">\r\n                <button \r\n                  className=\"template-btn\"\r\n                  onClick={() => downloadTemplate('FARMER')}\r\n                >\r\n                  ðŸ“„ Download Farmer Template\r\n                </button>\r\n                {userRole === 'SUPER_ADMIN' && (\r\n                  <button \r\n                    className=\"template-btn\"\r\n                    onClick={() => downloadTemplate('EMPLOYEE')}\r\n                  >\r\n                    ðŸ“„ Download Employee Template\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"import-form\">\r\n              <div className=\"form-group\">\r\n                <label>Import Type:</label>\r\n                <select \r\n                  value={importType} \r\n                  onChange={(e) => setImportType(e.target.value)}\r\n                >\r\n                  <option value=\"FARMER\">Farmer Data</option>\r\n                  {userRole === 'SUPER_ADMIN' && (\r\n                    <option value=\"EMPLOYEE\">Employee Data</option>\r\n                  )}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Select File:</label>\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  onChange={handleFileSelect}\r\n                  accept=\".xlsx,.xls,.csv\"\r\n                  className=\"file-input\"\r\n                />\r\n                {selectedFile && (\r\n                  <p className=\"file-info\">\r\n                    Selected: {selectedFile.name} ({(selectedFile.size / 1024 / 1024).toFixed(2)} MB)\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <button \r\n                className=\"import-btn\"\r\n                onClick={handleImport}\r\n                disabled={!selectedFile || isImporting}\r\n              >\r\n                {isImporting ? 'ðŸ”„ Importing...' : 'ðŸ“¥ Start Import'}\r\n              </button>\r\n            </div>\r\n\r\n            {importStatus && (\r\n              <div className={`import-status ${importStatus.status.toLowerCase()}`}>\r\n                <h4>Import Status: {importStatus.status}</h4>\r\n                <div className=\"status-details\">\r\n                  <p><strong>Total Records:</strong> {importStatus.totalRecords || 0}</p>\r\n                  <p><strong>Successful:</strong> {importStatus.successfulImports || 0}</p>\r\n                  <p><strong>Failed:</strong> {importStatus.failedImports || 0}</p>\r\n                  <p><strong>Skipped:</strong> {importStatus.skippedRecords || 0}</p>\r\n                  {importStatus.message && (\r\n                    <p><strong>Message:</strong> {importStatus.message}</p>\r\n                  )}\r\n                </div>\r\n                \r\n                {importStatus.errors && importStatus.errors.length > 0 && (\r\n                  <div className=\"import-errors\">\r\n                    <h5>Errors ({importStatus.errors.length}):</h5>\r\n                    <div className=\"error-list\">\r\n                      {importStatus.errors.slice(0, 10).map((error, index) => (\r\n                        <div key={index} className=\"error-item\">\r\n                          <span>Row {error.rowNumber}: {error.fieldName}</span>\r\n                          <span>{error.errorMessage}</span>\r\n                        </div>\r\n                      ))}\r\n                      {importStatus.errors.length > 10 && (\r\n                        <p>... and {importStatus.errors.length - 10} more errors</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'export' && (\r\n          <div className=\"export-section\">\r\n            <div className=\"section-header\">\r\n              <h3>Bulk Export</h3>\r\n            </div>\r\n\r\n            <div className=\"export-form\">\r\n              <div className=\"form-group\">\r\n                <label>Export Type:</label>\r\n                <select \r\n                  value={importType} \r\n                  onChange={(e) => setImportType(e.target.value)}\r\n                >\r\n                  <option value=\"FARMER\">Farmer Data</option>\r\n                  {userRole === 'SUPER_ADMIN' && (\r\n                    <option value=\"EMPLOYEE\">Employee Data</option>\r\n                  )}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Format:</label>\r\n                <select \r\n                  value={exportFilters.format} \r\n                  onChange={(e) => setExportFilters({\r\n                    ...exportFilters, \r\n                    format: e.target.value\r\n                  })}\r\n                >\r\n                  <option value=\"EXCEL\">Excel (.xlsx)</option>\r\n                  <option value=\"CSV\">CSV (.csv)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Assigned Employee Email:</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={exportFilters.assignedEmployeeEmail}\r\n                  onChange={(e) => setExportFilters({\r\n                    ...exportFilters, \r\n                    assignedEmployeeEmail: e.target.value\r\n                  })}\r\n                  placeholder=\"Filter by assigned employee\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Location (District):</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={exportFilters.location}\r\n                  onChange={(e) => setExportFilters({\r\n                    ...exportFilters, \r\n                    location: e.target.value\r\n                  })}\r\n                  placeholder=\"Filter by district\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>KYC Status:</label>\r\n                <select \r\n                  value={exportFilters.kycStatus} \r\n                  onChange={(e) => setExportFilters({\r\n                    ...exportFilters, \r\n                    kycStatus: e.target.value\r\n                  })}\r\n                >\r\n                  <option value=\"\">All Statuses</option>\r\n                  <option value=\"PENDING\">Pending</option>\r\n                  <option value=\"APPROVED\">Approved</option>\r\n                  <option value=\"REJECTED\">Rejected</option>\r\n                  <option value=\"REFER_BACK\">Refer Back</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                  <label>From Date:</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={exportFilters.fromDate}\r\n                    onChange={(e) => setExportFilters({\r\n                      ...exportFilters, \r\n                      fromDate: e.target.value\r\n                    })}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>To Date:</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={exportFilters.toDate}\r\n                    onChange={(e) => setExportFilters({\r\n                      ...exportFilters, \r\n                      toDate: e.target.value\r\n                    })}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                className=\"export-btn\"\r\n                onClick={handleExport}\r\n                disabled={isExporting}\r\n              >\r\n                {isExporting ? 'ðŸ”„ Exporting...' : 'ðŸ“¤ Export Data'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'assignment' && (\r\n          <div className=\"assignment-section\">\r\n            <div className=\"section-header\">\r\n              <h3>Bulk Assignment</h3>\r\n            </div>\r\n\r\n            <div className=\"assignment-form\">\r\n              <div className=\"form-group\">\r\n                <label>Assignment Type:</label>\r\n                <select \r\n                  value={assignmentData.assignmentType} \r\n                  onChange={(e) => setAssignmentData({\r\n                    ...assignmentData, \r\n                    assignmentType: e.target.value\r\n                  })}\r\n                >\r\n                  <option value=\"MANUAL\">Manual Assignment</option>\r\n                  <option value=\"LOCATION\">By Location</option>\r\n                  <option value=\"ROUND_ROBIN\">Round Robin</option>\r\n                </select>\r\n              </div>\r\n\r\n              {assignmentData.assignmentType === 'MANUAL' && (\r\n                <div className=\"form-group\">\r\n                  <label>Farmer IDs (comma-separated):</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={assignmentData.farmerIds.join(',')}\r\n                    onChange={(e) => setAssignmentData({\r\n                      ...assignmentData, \r\n                      farmerIds: e.target.value.split(',').map(id => id.trim()).filter(id => id)\r\n                    })}\r\n                    placeholder=\"1, 2, 3, 4, 5\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {assignmentData.assignmentType === 'LOCATION' && (\r\n                <div className=\"form-group\">\r\n                  <label>Location (District):</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={assignmentData.location}\r\n                    onChange={(e) => setAssignmentData({\r\n                      ...assignmentData, \r\n                      location: e.target.value\r\n                    })}\r\n                    placeholder=\"Enter district name\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {assignmentData.assignmentType === 'ROUND_ROBIN' && (\r\n                <div className=\"form-group\">\r\n                  <label>Farmer IDs (comma-separated):</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={assignmentData.farmerIds.join(',')}\r\n                    onChange={(e) => setAssignmentData({\r\n                      ...assignmentData, \r\n                      farmerIds: e.target.value.split(',').map(id => id.trim()).filter(id => id)\r\n                    })}\r\n                    placeholder=\"1, 2, 3, 4, 5\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {assignmentData.assignmentType !== 'ROUND_ROBIN' && (\r\n                <div className=\"form-group\">\r\n                  <label>Employee ID:</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={assignmentData.employeeId}\r\n                    onChange={(e) => setAssignmentData({\r\n                      ...assignmentData, \r\n                      employeeId: e.target.value\r\n                    })}\r\n                    placeholder=\"Enter employee ID\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <button \r\n                className=\"assignment-btn\"\r\n                onClick={handleBulkAssignment}\r\n              >\r\n                ðŸ‘¥ Assign Farmers\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BulkOperations;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC/C,OAASC,UAAU,KAAQ,mBAAmB,CAC9C,MAAO,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,QAAQ,CAAC,CACpD,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,QAAQ,CAAC,CACtD,KAAM,CAACc,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACgB,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACoB,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACsB,aAAa,CAAEC,gBAAgB,CAAC,CAAGvB,QAAQ,CAAC,CACjDwB,MAAM,CAAE,OAAO,CACfC,qBAAqB,CAAE,EAAE,CACzBC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,EAAE,CACbC,QAAQ,CAAE,EAAE,CACZC,MAAM,CAAE,EACV,CAAC,CAAC,CACF,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAG/B,QAAQ,CAAC,CACnDgC,SAAS,CAAE,EAAE,CACbC,UAAU,CAAE,EAAE,CACdC,cAAc,CAAE,QAClB,CAAC,CAAC,CACF,KAAM,CAAAC,YAAY,CAAGlC,MAAM,CAAC,CAAC,CAE7B,KAAM,CAAAmC,gBAAgB,CAAIC,KAAK,EAAK,CAClC,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAClC,GAAIF,IAAI,CAAE,CACR,KAAM,CAAAG,YAAY,CAAG,CACnB,mEAAmE,CACnE,0BAA0B,CAC1B,UAAU,CACX,CAED,GAAIA,YAAY,CAACC,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC,EAAIL,IAAI,CAACM,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAE,CAClE9B,eAAe,CAACuB,IAAI,CAAC,CACvB,CAAC,IAAM,CACLQ,KAAK,CAAC,wDAAwD,CAAC,CAC/DT,KAAK,CAACE,MAAM,CAACQ,KAAK,CAAG,EAAE,CACzB,CACF,CACF,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAL,IAAI,EAAK,CACvC,GAAI,CACF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAA/C,UAAU,CAAC8C,gBAAgB,CAACL,IAAI,CAACO,WAAW,CAAC,CAAC,CAAC,CACtE,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACH,QAAQ,CAAC,CAAE,CAChCN,IAAI,CAAE,mEACR,CAAC,CAAC,CACF,KAAM,CAAAU,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAC5C,KAAM,CAAAM,CAAC,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACrCF,CAAC,CAACG,IAAI,CAAGP,GAAG,CACZI,CAAC,CAACI,QAAQ,CAAG,GAAGlB,IAAI,CAACO,WAAW,CAAC,CAAC,uBAAuB,CACzDQ,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC,CAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC,CACTV,MAAM,CAACC,GAAG,CAACU,eAAe,CAACZ,GAAG,CAAC,CAC/BK,QAAQ,CAACI,IAAI,CAACI,WAAW,CAACT,CAAC,CAAC,CAC9B,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDrB,KAAK,CAAC,6BAA6B,CAAC,CACtC,CACF,CAAC,CAED,KAAM,CAAAuB,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CAACvD,YAAY,CAAE,CACjBgC,KAAK,CAAC,gCAAgC,CAAC,CACvC,OACF,CAEA3B,cAAc,CAAC,IAAI,CAAC,CACpB,GAAI,CACF,KAAM,CAAAmD,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAE1D,YAAY,CAAC,CACrCwD,QAAQ,CAACE,MAAM,CAAC,YAAY,CAAE,KAAK,CAAC,CACpCF,QAAQ,CAACE,MAAM,CAAC,oBAAoB,CAAE,QAAQ,CAAC,CAE/C,KAAM,CAAAvB,QAAQ,CAAG,KAAM,CAAA/C,UAAU,CAACuE,UAAU,CAAC7D,UAAU,CAACsC,WAAW,CAAC,CAAC,CAAEoB,QAAQ,CAAC,CAChFrD,eAAe,CAACgC,QAAQ,CAAC,CAEzB,GAAIA,QAAQ,CAACyB,MAAM,GAAK,YAAY,CAAE,CACpC;AACAC,gBAAgB,CAAC1B,QAAQ,CAAC2B,QAAQ,CAAC,CACrC,CACF,CAAE,MAAOT,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrCrB,KAAK,CAAC,iBAAiB,CAAGqB,KAAK,CAACU,OAAO,CAAC,CAC1C,CAAC,OAAS,CACR1D,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAwD,gBAAgB,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC3C,KAAM,CAAAE,WAAW,CAAG,EAAE,CAAE;AACxB,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAEhB,KAAM,CAAAC,IAAI,CAAG,KAAAA,CAAA,GAAY,CACvB,GAAI,CACF,KAAM,CAAAN,MAAM,CAAG,KAAM,CAAAxE,UAAU,CAAC+E,eAAe,CAACL,QAAQ,CAAC,CACzD3D,eAAe,CAACyD,MAAM,CAAC,CAEvB,GAAIA,MAAM,CAACA,MAAM,GAAK,WAAW,EAAIA,MAAM,CAACA,MAAM,GAAK,QAAQ,CAAE,CAC/D,OACF,CAEAK,QAAQ,EAAE,CACV,GAAIA,QAAQ,CAAGD,WAAW,CAAE,CAC1BI,UAAU,CAACF,IAAI,CAAE,KAAK,CAAC,CAAE;AAC3B,CACF,CAAE,MAAOb,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAEDe,UAAU,CAACF,IAAI,CAAE,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAG,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B9D,cAAc,CAAC,IAAI,CAAC,CACpB,GAAI,CACF,KAAM,CAAA4B,QAAQ,CAAG,KAAM,CAAA/C,UAAU,CAACkF,UAAU,CAACxE,UAAU,CAACsC,WAAW,CAAC,CAAC,CAAE5B,aAAa,CAAC,CAErF,KAAM,CAAA6B,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACH,QAAQ,CAAC,CAAE,CAChCN,IAAI,CAAErB,aAAa,CAACE,MAAM,GAAK,OAAO,CAClC,mEAAmE,CACnE,UACN,CAAC,CAAC,CAEF,KAAM,CAAA6B,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAC5C,KAAM,CAAAM,CAAC,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACrCF,CAAC,CAACG,IAAI,CAAGP,GAAG,CACZI,CAAC,CAACI,QAAQ,CAAG,GAAGjD,UAAU,CAACsC,WAAW,CAAC,CAAC,WAAWmC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIhE,aAAa,CAACE,MAAM,CAAC0B,WAAW,CAAC,CAAC,EAAE,CACrGQ,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC,CAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC,CACTV,MAAM,CAACC,GAAG,CAACU,eAAe,CAACZ,GAAG,CAAC,CAC/BK,QAAQ,CAACI,IAAI,CAACI,WAAW,CAACT,CAAC,CAAC,CAC9B,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrCrB,KAAK,CAAC,iBAAiB,CAAGqB,KAAK,CAACU,OAAO,CAAC,CAC1C,CAAC,OAAS,CACRxD,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAkE,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CAACzD,cAAc,CAACE,SAAS,CAACwD,MAAM,EAAI,CAAC1D,cAAc,CAACG,UAAU,CAAE,CAClEa,KAAK,CAAC,sDAAsD,CAAC,CAC7D,OACF,CAEA,GAAI,CACF,GAAI,CAAAG,QAAQ,CACZ,OAAQnB,cAAc,CAACI,cAAc,EACnC,IAAK,QAAQ,CACXe,QAAQ,CAAG,KAAM,CAAA/C,UAAU,CAACuF,2BAA2B,CACrD3D,cAAc,CAACE,SAAS,CACxBF,cAAc,CAACG,UACjB,CAAC,CACD,MACF,IAAK,UAAU,CACbgB,QAAQ,CAAG,KAAM,CAAA/C,UAAU,CAACwF,2BAA2B,CACrD5D,cAAc,CAACJ,QAAQ,CACvBI,cAAc,CAACG,UACjB,CAAC,CACD,MACF,IAAK,aAAa,CAChBgB,QAAQ,CAAG,KAAM,CAAA/C,UAAU,CAACyF,2BAA2B,CACrD7D,cAAc,CAACE,SACjB,CAAC,CACD,MACF,QACE,KAAM,IAAI,CAAA4D,KAAK,CAAC,yBAAyB,CAAC,CAC9C,CAEA9C,KAAK,CAAC,wCAAwC,CAAC,CACjD,CAAE,MAAOqB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CrB,KAAK,CAAC,0BAA0B,CAAGqB,KAAK,CAACU,OAAO,CAAC,CACnD,CACF,CAAC,CAED,mBACEvE,KAAA,QAAKuF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BxF,KAAA,QAAKuF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B1F,IAAA,OAAA0F,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxB1F,IAAA,MAAA0F,QAAA,CAAG,8CAA4C,CAAG,CAAC,EAChD,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB1F,IAAA,WACEyF,SAAS,CAAE,OAAOnF,SAAS,GAAK,QAAQ,CAAG,QAAQ,CAAG,EAAE,EAAG,CAC3DqF,OAAO,CAAEA,CAAA,GAAMpF,YAAY,CAAC,QAAQ,CAAE,CAAAmF,QAAA,CACvC,0BAED,CAAQ,CAAC,cACT1F,IAAA,WACEyF,SAAS,CAAE,OAAOnF,SAAS,GAAK,QAAQ,CAAG,QAAQ,CAAG,EAAE,EAAG,CAC3DqF,OAAO,CAAEA,CAAA,GAAMpF,YAAY,CAAC,QAAQ,CAAE,CAAAmF,QAAA,CACvC,0BAED,CAAQ,CAAC,cACT1F,IAAA,WACEyF,SAAS,CAAE,OAAOnF,SAAS,GAAK,YAAY,CAAG,QAAQ,CAAG,EAAE,EAAG,CAC/DqF,OAAO,CAAEA,CAAA,GAAMpF,YAAY,CAAC,YAAY,CAAE,CAAAmF,QAAA,CAC3C,8BAED,CAAQ,CAAC,EACN,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,cAAc,CAAAC,QAAA,EAC1BpF,SAAS,GAAK,QAAQ,eACrBJ,KAAA,QAAKuF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BxF,KAAA,QAAKuF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B1F,IAAA,OAAA0F,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBxF,KAAA,QAAKuF,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjC1F,IAAA,WACEyF,SAAS,CAAC,cAAc,CACxBE,OAAO,CAAEA,CAAA,GAAM/C,gBAAgB,CAAC,QAAQ,CAAE,CAAA8C,QAAA,CAC3C,uCAED,CAAQ,CAAC,CACRrF,QAAQ,GAAK,aAAa,eACzBL,IAAA,WACEyF,SAAS,CAAC,cAAc,CACxBE,OAAO,CAAEA,CAAA,GAAM/C,gBAAgB,CAAC,UAAU,CAAE,CAAA8C,QAAA,CAC7C,yCAED,CAAQ,CACT,EACE,CAAC,EACH,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BxF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,cAAY,CAAO,CAAC,cAC3BxF,KAAA,WACEyC,KAAK,CAAEnC,UAAW,CAClBoF,QAAQ,CAAGC,CAAC,EAAKpF,aAAa,CAACoF,CAAC,CAAC1D,MAAM,CAACQ,KAAK,CAAE,CAAA+C,QAAA,eAE/C1F,IAAA,WAAQ2C,KAAK,CAAC,QAAQ,CAAA+C,QAAA,CAAC,aAAW,CAAQ,CAAC,CAC1CrF,QAAQ,GAAK,aAAa,eACzBL,IAAA,WAAQ2C,KAAK,CAAC,UAAU,CAAA+C,QAAA,CAAC,eAAa,CAAQ,CAC/C,EACK,CAAC,EACN,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,cAAY,CAAO,CAAC,cAC3B1F,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXuD,GAAG,CAAE/D,YAAa,CAClB6D,QAAQ,CAAE5D,gBAAiB,CAC3B+D,MAAM,CAAC,iBAAiB,CACxBN,SAAS,CAAC,YAAY,CACvB,CAAC,CACD/E,YAAY,eACXR,KAAA,MAAGuF,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,YACb,CAAChF,YAAY,CAAC8B,IAAI,CAAC,IAAE,CAAC,CAAC9B,YAAY,CAACsF,IAAI,CAAG,IAAI,CAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,MAC/E,EAAG,CACJ,EACE,CAAC,cAENjG,IAAA,WACEyF,SAAS,CAAC,YAAY,CACtBE,OAAO,CAAE1B,YAAa,CACtBiC,QAAQ,CAAE,CAACxF,YAAY,EAAII,WAAY,CAAA4E,QAAA,CAEtC5E,WAAW,CAAG,iBAAiB,CAAG,iBAAiB,CAC9C,CAAC,EACN,CAAC,CAELF,YAAY,eACXV,KAAA,QAAKuF,SAAS,CAAE,iBAAiB7E,YAAY,CAAC0D,MAAM,CAACxB,WAAW,CAAC,CAAC,EAAG,CAAA4C,QAAA,eACnExF,KAAA,OAAAwF,QAAA,EAAI,iBAAe,CAAC9E,YAAY,CAAC0D,MAAM,EAAK,CAAC,cAC7CpE,KAAA,QAAKuF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BxF,KAAA,MAAAwF,QAAA,eAAG1F,IAAA,WAAA0F,QAAA,CAAQ,gBAAc,CAAQ,CAAC,IAAC,CAAC9E,YAAY,CAACuF,YAAY,EAAI,CAAC,EAAI,CAAC,cACvEjG,KAAA,MAAAwF,QAAA,eAAG1F,IAAA,WAAA0F,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAAC9E,YAAY,CAACwF,iBAAiB,EAAI,CAAC,EAAI,CAAC,cACzElG,KAAA,MAAAwF,QAAA,eAAG1F,IAAA,WAAA0F,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAAC9E,YAAY,CAACyF,aAAa,EAAI,CAAC,EAAI,CAAC,cACjEnG,KAAA,MAAAwF,QAAA,eAAG1F,IAAA,WAAA0F,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAAC9E,YAAY,CAAC0F,cAAc,EAAI,CAAC,EAAI,CAAC,CAClE1F,YAAY,CAAC6D,OAAO,eACnBvE,KAAA,MAAAwF,QAAA,eAAG1F,IAAA,WAAA0F,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAAC9E,YAAY,CAAC6D,OAAO,EAAI,CACvD,EACE,CAAC,CAEL7D,YAAY,CAAC2F,MAAM,EAAI3F,YAAY,CAAC2F,MAAM,CAACnB,MAAM,CAAG,CAAC,eACpDlF,KAAA,QAAKuF,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxF,KAAA,OAAAwF,QAAA,EAAI,UAAQ,CAAC9E,YAAY,CAAC2F,MAAM,CAACnB,MAAM,CAAC,IAAE,EAAI,CAAC,cAC/ClF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB9E,YAAY,CAAC2F,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC1C,KAAK,CAAE2C,KAAK,gBACjDxG,KAAA,QAAiBuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACrCxF,KAAA,SAAAwF,QAAA,EAAM,MAAI,CAAC3B,KAAK,CAAC4C,SAAS,CAAC,IAAE,CAAC5C,KAAK,CAAC6C,SAAS,EAAO,CAAC,cACrD5G,IAAA,SAAA0F,QAAA,CAAO3B,KAAK,CAAC8C,YAAY,CAAO,CAAC,GAFzBH,KAGL,CACN,CAAC,CACD9F,YAAY,CAAC2F,MAAM,CAACnB,MAAM,CAAG,EAAE,eAC9BlF,KAAA,MAAAwF,QAAA,EAAG,UAAQ,CAAC9E,YAAY,CAAC2F,MAAM,CAACnB,MAAM,CAAG,EAAE,CAAC,cAAY,EAAG,CAC5D,EACE,CAAC,EACH,CACN,EACE,CACN,EACE,CACN,CAEA9E,SAAS,GAAK,QAAQ,eACrBJ,KAAA,QAAKuF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B1F,IAAA,QAAKyF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7B1F,IAAA,OAAA0F,QAAA,CAAI,aAAW,CAAI,CAAC,CACjB,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BxF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,cAAY,CAAO,CAAC,cAC3BxF,KAAA,WACEyC,KAAK,CAAEnC,UAAW,CAClBoF,QAAQ,CAAGC,CAAC,EAAKpF,aAAa,CAACoF,CAAC,CAAC1D,MAAM,CAACQ,KAAK,CAAE,CAAA+C,QAAA,eAE/C1F,IAAA,WAAQ2C,KAAK,CAAC,QAAQ,CAAA+C,QAAA,CAAC,aAAW,CAAQ,CAAC,CAC1CrF,QAAQ,GAAK,aAAa,eACzBL,IAAA,WAAQ2C,KAAK,CAAC,UAAU,CAAA+C,QAAA,CAAC,eAAa,CAAQ,CAC/C,EACK,CAAC,EACN,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,SAAO,CAAO,CAAC,cACtBxF,KAAA,WACEyC,KAAK,CAAEzB,aAAa,CAACE,MAAO,CAC5BwE,QAAQ,CAAGC,CAAC,EAAK1E,gBAAgB,CAAC,CAChC,GAAGD,aAAa,CAChBE,MAAM,CAAEyE,CAAC,CAAC1D,MAAM,CAACQ,KACnB,CAAC,CAAE,CAAA+C,QAAA,eAEH1F,IAAA,WAAQ2C,KAAK,CAAC,OAAO,CAAA+C,QAAA,CAAC,eAAa,CAAQ,CAAC,cAC5C1F,IAAA,WAAQ2C,KAAK,CAAC,KAAK,CAAA+C,QAAA,CAAC,YAAU,CAAQ,CAAC,EACjC,CAAC,EACN,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,0BAAwB,CAAO,CAAC,cACvC1F,IAAA,UACEuC,IAAI,CAAC,OAAO,CACZI,KAAK,CAAEzB,aAAa,CAACG,qBAAsB,CAC3CuE,QAAQ,CAAGC,CAAC,EAAK1E,gBAAgB,CAAC,CAChC,GAAGD,aAAa,CAChBG,qBAAqB,CAAEwE,CAAC,CAAC1D,MAAM,CAACQ,KAClC,CAAC,CAAE,CACHmE,WAAW,CAAC,6BAA6B,CAC1C,CAAC,EACC,CAAC,cAEN5G,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,sBAAoB,CAAO,CAAC,cACnC1F,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXI,KAAK,CAAEzB,aAAa,CAACI,QAAS,CAC9BsE,QAAQ,CAAGC,CAAC,EAAK1E,gBAAgB,CAAC,CAChC,GAAGD,aAAa,CAChBI,QAAQ,CAAEuE,CAAC,CAAC1D,MAAM,CAACQ,KACrB,CAAC,CAAE,CACHmE,WAAW,CAAC,oBAAoB,CACjC,CAAC,EACC,CAAC,cAEN5G,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,aAAW,CAAO,CAAC,cAC1BxF,KAAA,WACEyC,KAAK,CAAEzB,aAAa,CAACK,SAAU,CAC/BqE,QAAQ,CAAGC,CAAC,EAAK1E,gBAAgB,CAAC,CAChC,GAAGD,aAAa,CAChBK,SAAS,CAAEsE,CAAC,CAAC1D,MAAM,CAACQ,KACtB,CAAC,CAAE,CAAA+C,QAAA,eAEH1F,IAAA,WAAQ2C,KAAK,CAAC,EAAE,CAAA+C,QAAA,CAAC,cAAY,CAAQ,CAAC,cACtC1F,IAAA,WAAQ2C,KAAK,CAAC,SAAS,CAAA+C,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC1F,IAAA,WAAQ2C,KAAK,CAAC,UAAU,CAAA+C,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C1F,IAAA,WAAQ2C,KAAK,CAAC,UAAU,CAAA+C,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C1F,IAAA,WAAQ2C,KAAK,CAAC,YAAY,CAAA+C,QAAA,CAAC,YAAU,CAAQ,CAAC,EACxC,CAAC,EACN,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBxF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,YAAU,CAAO,CAAC,cACzB1F,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXI,KAAK,CAAEzB,aAAa,CAACM,QAAS,CAC9BoE,QAAQ,CAAGC,CAAC,EAAK1E,gBAAgB,CAAC,CAChC,GAAGD,aAAa,CAChBM,QAAQ,CAAEqE,CAAC,CAAC1D,MAAM,CAACQ,KACrB,CAAC,CAAE,CACJ,CAAC,EACC,CAAC,cACNzC,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,UAAQ,CAAO,CAAC,cACvB1F,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXI,KAAK,CAAEzB,aAAa,CAACO,MAAO,CAC5BmE,QAAQ,CAAGC,CAAC,EAAK1E,gBAAgB,CAAC,CAChC,GAAGD,aAAa,CAChBO,MAAM,CAAEoE,CAAC,CAAC1D,MAAM,CAACQ,KACnB,CAAC,CAAE,CACJ,CAAC,EACC,CAAC,EACH,CAAC,cAEN3C,IAAA,WACEyF,SAAS,CAAC,YAAY,CACtBE,OAAO,CAAEZ,YAAa,CACtBmB,QAAQ,CAAElF,WAAY,CAAA0E,QAAA,CAErB1E,WAAW,CAAG,iBAAiB,CAAG,gBAAgB,CAC7C,CAAC,EACN,CAAC,EACH,CACN,CAEAV,SAAS,GAAK,YAAY,eACzBJ,KAAA,QAAKuF,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjC1F,IAAA,QAAKyF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7B1F,IAAA,OAAA0F,QAAA,CAAI,iBAAe,CAAI,CAAC,CACrB,CAAC,cAENxF,KAAA,QAAKuF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BxF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,kBAAgB,CAAO,CAAC,cAC/BxF,KAAA,WACEyC,KAAK,CAAEjB,cAAc,CAACI,cAAe,CACrC8D,QAAQ,CAAGC,CAAC,EAAKlE,iBAAiB,CAAC,CACjC,GAAGD,cAAc,CACjBI,cAAc,CAAE+D,CAAC,CAAC1D,MAAM,CAACQ,KAC3B,CAAC,CAAE,CAAA+C,QAAA,eAEH1F,IAAA,WAAQ2C,KAAK,CAAC,QAAQ,CAAA+C,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD1F,IAAA,WAAQ2C,KAAK,CAAC,UAAU,CAAA+C,QAAA,CAAC,aAAW,CAAQ,CAAC,cAC7C1F,IAAA,WAAQ2C,KAAK,CAAC,aAAa,CAAA+C,QAAA,CAAC,aAAW,CAAQ,CAAC,EAC1C,CAAC,EACN,CAAC,CAELhE,cAAc,CAACI,cAAc,GAAK,QAAQ,eACzC5B,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,+BAA6B,CAAO,CAAC,cAC5C1F,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXI,KAAK,CAAEjB,cAAc,CAACE,SAAS,CAACmF,IAAI,CAAC,GAAG,CAAE,CAC1CnB,QAAQ,CAAGC,CAAC,EAAKlE,iBAAiB,CAAC,CACjC,GAAGD,cAAc,CACjBE,SAAS,CAAEiE,CAAC,CAAC1D,MAAM,CAACQ,KAAK,CAACqE,KAAK,CAAC,GAAG,CAAC,CAACP,GAAG,CAACQ,EAAE,EAAIA,EAAE,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACF,EAAE,EAAIA,EAAE,CAC3E,CAAC,CAAE,CACHH,WAAW,CAAC,eAAe,CAC5B,CAAC,EACC,CACN,CAEApF,cAAc,CAACI,cAAc,GAAK,UAAU,eAC3C5B,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,sBAAoB,CAAO,CAAC,cACnC1F,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXI,KAAK,CAAEjB,cAAc,CAACJ,QAAS,CAC/BsE,QAAQ,CAAGC,CAAC,EAAKlE,iBAAiB,CAAC,CACjC,GAAGD,cAAc,CACjBJ,QAAQ,CAAEuE,CAAC,CAAC1D,MAAM,CAACQ,KACrB,CAAC,CAAE,CACHmE,WAAW,CAAC,qBAAqB,CAClC,CAAC,EACC,CACN,CAEApF,cAAc,CAACI,cAAc,GAAK,aAAa,eAC9C5B,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,+BAA6B,CAAO,CAAC,cAC5C1F,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXI,KAAK,CAAEjB,cAAc,CAACE,SAAS,CAACmF,IAAI,CAAC,GAAG,CAAE,CAC1CnB,QAAQ,CAAGC,CAAC,EAAKlE,iBAAiB,CAAC,CACjC,GAAGD,cAAc,CACjBE,SAAS,CAAEiE,CAAC,CAAC1D,MAAM,CAACQ,KAAK,CAACqE,KAAK,CAAC,GAAG,CAAC,CAACP,GAAG,CAACQ,EAAE,EAAIA,EAAE,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACF,EAAE,EAAIA,EAAE,CAC3E,CAAC,CAAE,CACHH,WAAW,CAAC,eAAe,CAC5B,CAAC,EACC,CACN,CAEApF,cAAc,CAACI,cAAc,GAAK,aAAa,eAC9C5B,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1F,IAAA,UAAA0F,QAAA,CAAO,cAAY,CAAO,CAAC,cAC3B1F,IAAA,UACEuC,IAAI,CAAC,QAAQ,CACbI,KAAK,CAAEjB,cAAc,CAACG,UAAW,CACjC+D,QAAQ,CAAGC,CAAC,EAAKlE,iBAAiB,CAAC,CACjC,GAAGD,cAAc,CACjBG,UAAU,CAAEgE,CAAC,CAAC1D,MAAM,CAACQ,KACvB,CAAC,CAAE,CACHmE,WAAW,CAAC,mBAAmB,CAChC,CAAC,EACC,CACN,cAED9G,IAAA,WACEyF,SAAS,CAAC,gBAAgB,CAC1BE,OAAO,CAAER,oBAAqB,CAAAO,QAAA,CAC/B,6BAED,CAAQ,CAAC,EACN,CAAC,EACH,CACN,EACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}