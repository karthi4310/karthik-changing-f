{"ast":null,"code":"var _jsxFileName = \"C:\\\\karthik cc\\\\Working-frontend\\\\src\\\\components\\\\BulkOperations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { apiService } from '../api/apiService';\nimport '../styles/BulkOperations.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BulkOperations = ({\n  userRole\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('import');\n  const [importType, setImportType] = useState('FARMER');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n  const [isImporting, setIsImporting] = useState(false);\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportFilters, setExportFilters] = useState({\n    format: 'EXCEL',\n    assignedEmployeeEmail: '',\n    location: '',\n    kycStatus: '',\n    fromDate: '',\n    toDate: ''\n  });\n  const [assignmentData, setAssignmentData] = useState({\n    farmerIds: [],\n    // legacy\n    employeeId: '',\n    // legacy\n    farmerNames: '',\n    // comma-separated names\n    employeeEmail: '',\n    assignmentType: 'MANUAL'\n  });\n  const fileInputRef = useRef();\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const allowedTypes = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel', 'text/csv'];\n      if (allowedTypes.includes(file.type) || file.name.endsWith('.csv')) {\n        setSelectedFile(file);\n      } else {\n        alert('Please select a valid Excel (.xlsx, .xls) or CSV file.');\n        event.target.value = '';\n      }\n    }\n  };\n  const toPathType = t => t && t.toLowerCase().startsWith('farmer') ? 'farmers' : 'employees';\n  const downloadTemplate = async type => {\n    try {\n      const response = await apiService.downloadTemplate(toPathType(type));\n      const blob = new Blob([response], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${type.toLowerCase()}_import_template.xlsx`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error('Error downloading template:', error);\n      alert('Failed to download template');\n    }\n  };\n  const handleImport = async () => {\n    if (!selectedFile) {\n      alert('Please select a file to import');\n      return;\n    }\n    setIsImporting(true);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('autoAssign', false);\n      formData.append('assignmentStrategy', 'MANUAL');\n      const response = await apiService.bulkImport(toPathType(importType), formData);\n      setImportStatus(response);\n      if (response.status === 'PROCESSING') {\n        // Poll for status updates\n        pollImportStatus(response.importId);\n      }\n    } catch (error) {\n      console.error('Import error:', error);\n      alert('Import failed: ' + error.message);\n    } finally {\n      setIsImporting(false);\n    }\n  };\n  const pollImportStatus = async importId => {\n    const maxAttempts = 30; // 5 minutes with 10-second intervals\n    let attempts = 0;\n    const poll = async () => {\n      try {\n        const status = await apiService.getImportStatus(importId);\n        setImportStatus(status);\n        if (status.status === 'COMPLETED' || status.status === 'FAILED') {\n          return;\n        }\n        attempts++;\n        if (attempts < maxAttempts) {\n          setTimeout(poll, 10000); // Poll every 10 seconds\n        }\n      } catch (error) {\n        console.error('Error polling import status:', error);\n      }\n    };\n    setTimeout(poll, 10000);\n  };\n  const handleExport = async () => {\n    setIsExporting(true);\n    try {\n      const response = await apiService.bulkExport(toPathType(importType), exportFilters);\n      const isExcel = exportFilters.format === 'EXCEL';\n      const blob = new Blob([response], {\n        type: isExcel ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' : 'text/csv;charset=utf-8'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      const ext = isExcel ? 'xlsx' : 'csv';\n      a.download = `${importType.toLowerCase()}_export_${Date.now()}.${ext}`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error('Export error:', error);\n      alert('Export failed: ' + error.message);\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const handleBulkAssignment = async () => {\n    try {\n      let response;\n      if (assignmentData.assignmentType === 'MANUAL') {\n        var _assignmentData$farme, _assignmentData$emplo;\n        // Prefer names+email if provided\n        if ((_assignmentData$farme = assignmentData.farmerNames) !== null && _assignmentData$farme !== void 0 && _assignmentData$farme.trim() && (_assignmentData$emplo = assignmentData.employeeEmail) !== null && _assignmentData$emplo !== void 0 && _assignmentData$emplo.trim()) {\n          const names = assignmentData.farmerNames.split(',').map(n => n.trim()).filter(Boolean);\n          response = await apiService.bulkAssignFarmersByNames(names, assignmentData.employeeEmail.trim());\n        } else if (assignmentData.farmerIds.length && assignmentData.employeeId) {\n          response = await apiService.bulkAssignFarmersToEmployee(assignmentData.farmerIds, assignmentData.employeeId);\n        } else {\n          alert('Enter farmer names and employee email (or legacy IDs).');\n          return;\n        }\n      } else if (assignmentData.assignmentType === 'LOCATION') {\n        var _assignmentData$locat, _assignmentData$emplo2;\n        if (!((_assignmentData$locat = assignmentData.location) !== null && _assignmentData$locat !== void 0 && _assignmentData$locat.trim())) {\n          alert('Enter a district (location).');\n          return;\n        }\n        // Prefer email if present\n        if ((_assignmentData$emplo2 = assignmentData.employeeEmail) !== null && _assignmentData$emplo2 !== void 0 && _assignmentData$emplo2.trim()) {\n          response = await apiService.bulkAssignFarmersByLocation(assignmentData.location.trim(), assignmentData.employeeEmail.trim());\n        } else if (assignmentData.employeeId) {\n          response = await apiService.bulkAssignFarmersByLocation(assignmentData.location.trim(), assignmentData.employeeId);\n        } else {\n          alert('Enter employee email (preferred) or employee ID.');\n          return;\n        }\n      } else if (assignmentData.assignmentType === 'ROUND_ROBIN') {\n        response = await apiService.bulkAssignFarmersRoundRobin(assignmentData.farmerIds);\n      } else {\n        throw new Error('Invalid assignment type');\n      }\n      alert('Bulk assignment completed successfully');\n    } catch (error) {\n      var _error$response;\n      console.error('Bulk assignment error:', error);\n      alert('Bulk assignment failed: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bulk-operations\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulk-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bulk Operations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Import and export large datasets efficiently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulk-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'import' ? 'active' : ''}`,\n        onClick: () => setActiveTab('import'),\n        children: \"\\uD83D\\uDCE5 Bulk Import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'export' ? 'active' : ''}`,\n        onClick: () => setActiveTab('export'),\n        children: \"\\uD83D\\uDCE4 Bulk Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'assignment' ? 'active' : ''}`,\n        onClick: () => setActiveTab('assignment'),\n        children: \"\\uD83D\\uDC65 Bulk Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulk-content\",\n      children: [activeTab === 'import' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"import-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bulk Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-downloads\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"template-btn\",\n              onClick: () => downloadTemplate('FARMER'),\n              children: \"\\uD83D\\uDCC4 Download Farmer Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), userRole === 'SUPER_ADMIN' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"template-btn\",\n              onClick: () => downloadTemplate('EMPLOYEE'),\n              children: \"\\uD83D\\uDCC4 Download Employee Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"import-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Import Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: importType,\n              onChange: e => setImportType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"FARMER\",\n                children: \"Farmer Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), userRole === 'SUPER_ADMIN' && /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"EMPLOYEE\",\n                children: \"Employee Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select File:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileInputRef,\n              onChange: handleFileSelect,\n              accept: \".xlsx,.xls,.csv\",\n              className: \"file-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-info\",\n              children: [\"Selected: \", selectedFile.name, \" (\", (selectedFile.size / 1024 / 1024).toFixed(2), \" MB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"import-btn\",\n            onClick: handleImport,\n            disabled: !selectedFile || isImporting,\n            children: isImporting ? '🔄 Importing...' : '📥 Start Import'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), importStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `import-status ${importStatus.status.toLowerCase()}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Import Status: \", importStatus.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Records:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 22\n              }, this), \" \", importStatus.totalRecords || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Successful:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 22\n              }, this), \" \", importStatus.successfulImports || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Failed:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 22\n              }, this), \" \", importStatus.failedImports || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Skipped:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 22\n              }, this), \" \", importStatus.skippedRecords || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), importStatus.message && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 24\n              }, this), \" \", importStatus.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), importStatus.errors && importStatus.errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"import-errors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Errors (\", importStatus.errors.length, \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-list\",\n              children: [importStatus.errors.slice(0, 10).map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Row \", error.rowNumber, \": \", error.fieldName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: error.errorMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 25\n              }, this)), importStatus.errors.length > 10 && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"... and \", importStatus.errors.length - 10, \" more errors\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), activeTab === 'export' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bulk Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"export-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Export Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: importType,\n              onChange: e => setImportType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"FARMER\",\n                children: \"Farmer Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), userRole === 'SUPER_ADMIN' && /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"EMPLOYEE\",\n                children: \"Employee Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Format:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportFilters.format,\n              onChange: e => setExportFilters({\n                ...exportFilters,\n                format: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"EXCEL\",\n                children: \"Excel (.xlsx)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CSV\",\n                children: \"CSV (.csv)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Assigned Employee Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: exportFilters.assignedEmployeeEmail,\n              onChange: e => setExportFilters({\n                ...exportFilters,\n                assignedEmployeeEmail: e.target.value\n              }),\n              placeholder: \"Filter by assigned employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Location (District):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: exportFilters.location,\n              onChange: e => setExportFilters({\n                ...exportFilters,\n                location: e.target.value\n              }),\n              placeholder: \"Filter by district\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"KYC Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportFilters.kycStatus,\n              onChange: e => setExportFilters({\n                ...exportFilters,\n                kycStatus: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Statuses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"PENDING\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"APPROVED\",\n                children: \"Approved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"REJECTED\",\n                children: \"Rejected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"REFER_BACK\",\n                children: \"Refer Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"From Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: exportFilters.fromDate,\n                onChange: e => setExportFilters({\n                  ...exportFilters,\n                  fromDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"To Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: exportFilters.toDate,\n                onChange: e => setExportFilters({\n                  ...exportFilters,\n                  toDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"export-btn\",\n            onClick: handleExport,\n            disabled: isExporting,\n            children: isExporting ? '🔄 Exporting...' : '📤 Export Data'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), activeTab === 'assignment' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bulk Assignment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assignment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Assignment Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: assignmentData.assignmentType,\n              onChange: e => setAssignmentData({\n                ...assignmentData,\n                assignmentType: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MANUAL\",\n                children: \"Manual Assignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"LOCATION\",\n                children: \"By Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ROUND_ROBIN\",\n                children: \"Round Robin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), assignmentData.assignmentType === 'MANUAL' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Farmer Names (comma-separated):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: assignmentData.farmerNames,\n                onChange: e => setAssignmentData({\n                  ...assignmentData,\n                  farmerNames: e.target.value\n                }),\n                placeholder: \"Krishna Kumar, suman kurrapati, ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Employee Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                value: assignmentData.employeeEmail,\n                onChange: e => setAssignmentData({\n                  ...assignmentData,\n                  employeeEmail: e.target.value\n                }),\n                placeholder: \"employee@example.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Farmer IDs (legacy, optional):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: assignmentData.farmerIds.join(','),\n                onChange: e => setAssignmentData({\n                  ...assignmentData,\n                  farmerIds: e.target.value.split(',').map(id => id.trim()).filter(id => id)\n                }),\n                placeholder: \"1, 2, 3, 4, 5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Employee ID (legacy, optional):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: assignmentData.employeeId,\n                onChange: e => setAssignmentData({\n                  ...assignmentData,\n                  employeeId: e.target.value\n                }),\n                placeholder: \"123\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), assignmentData.assignmentType === 'LOCATION' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Location (District):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: assignmentData.location,\n                onChange: e => setAssignmentData({\n                  ...assignmentData,\n                  location: e.target.value\n                }),\n                placeholder: \"kadapa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Employee Email (preferred):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                value: assignmentData.employeeEmail,\n                onChange: e => setAssignmentData({\n                  ...assignmentData,\n                  employeeEmail: e.target.value\n                }),\n                placeholder: \"employee@example.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), assignmentData.assignmentType === 'ROUND_ROBIN' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Farmer IDs (comma-separated):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: assignmentData.farmerIds.join(','),\n              onChange: e => setAssignmentData({\n                ...assignmentData,\n                farmerIds: e.target.value.split(',').map(id => id.trim()).filter(id => id)\n              }),\n              placeholder: \"1, 2, 3, 4, 5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 17\n          }, this), assignmentData.assignmentType !== 'ROUND_ROBIN' && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"assignment-btn\",\n            onClick: handleBulkAssignment,\n            children: \"\\uD83D\\uDC65 Assign Farmers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(BulkOperations, \"Y4RKZ3zMoJp0U1l8woJxzIpfGsA=\");\n_c = BulkOperations;\nexport default BulkOperations;\nvar _c;\n$RefreshReg$(_c, \"BulkOperations\");","map":{"version":3,"names":["React","useState","useRef","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","BulkOperations","userRole","_s","activeTab","setActiveTab","importType","setImportType","selectedFile","setSelectedFile","importStatus","setImportStatus","isImporting","setIsImporting","isExporting","setIsExporting","exportFilters","setExportFilters","format","assignedEmployeeEmail","location","kycStatus","fromDate","toDate","assignmentData","setAssignmentData","farmerIds","employeeId","farmerNames","employeeEmail","assignmentType","fileInputRef","handleFileSelect","event","file","target","files","allowedTypes","includes","type","name","endsWith","alert","value","toPathType","t","toLowerCase","startsWith","downloadTemplate","response","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","error","console","handleImport","formData","FormData","append","bulkImport","status","pollImportStatus","importId","message","maxAttempts","attempts","poll","getImportStatus","setTimeout","handleExport","bulkExport","isExcel","ext","Date","now","handleBulkAssignment","_assignmentData$farme","_assignmentData$emplo","trim","names","split","map","n","filter","Boolean","bulkAssignFarmersByNames","length","bulkAssignFarmersToEmployee","_assignmentData$locat","_assignmentData$emplo2","bulkAssignFarmersByLocation","bulkAssignFarmersRoundRobin","Error","_error$response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","ref","accept","size","toFixed","disabled","totalRecords","successfulImports","failedImports","skippedRecords","errors","slice","index","rowNumber","fieldName","errorMessage","placeholder","join","id","_c","$RefreshReg$"],"sources":["C:/karthik cc/Working-frontend/src/components/BulkOperations.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { apiService } from '../api/apiService';\r\nimport '../styles/BulkOperations.css';\r\n\r\nconst BulkOperations = ({ userRole }) => {\r\n  const [activeTab, setActiveTab] = useState('import');\r\n  const [importType, setImportType] = useState('FARMER');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [importStatus, setImportStatus] = useState(null);\r\n  const [isImporting, setIsImporting] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportFilters, setExportFilters] = useState({\r\n    format: 'EXCEL',\r\n    assignedEmployeeEmail: '',\r\n    location: '',\r\n    kycStatus: '',\r\n    fromDate: '',\r\n    toDate: ''\r\n  });\r\n  const [assignmentData, setAssignmentData] = useState({\r\n    farmerIds: [], // legacy\r\n    employeeId: '', // legacy\r\n    farmerNames: '', // comma-separated names\r\n    employeeEmail: '',\r\n    assignmentType: 'MANUAL'\r\n  });\r\n  const fileInputRef = useRef();\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const allowedTypes = [\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        'application/vnd.ms-excel',\r\n        'text/csv'\r\n      ];\r\n      \r\n      if (allowedTypes.includes(file.type) || file.name.endsWith('.csv')) {\r\n        setSelectedFile(file);\r\n      } else {\r\n        alert('Please select a valid Excel (.xlsx, .xls) or CSV file.');\r\n        event.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const toPathType = (t) => (t && t.toLowerCase().startsWith('farmer') ? 'farmers' : 'employees');\r\n\r\n  const downloadTemplate = async (type) => {\r\n    try {\r\n      const response = await apiService.downloadTemplate(toPathType(type));\r\n      const blob = new Blob([response], { \r\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \r\n      });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `${type.toLowerCase()}_import_template.xlsx`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Error downloading template:', error);\r\n      alert('Failed to download template');\r\n    }\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to import');\r\n      return;\r\n    }\r\n\r\n    setIsImporting(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      formData.append('autoAssign', false);\r\n      formData.append('assignmentStrategy', 'MANUAL');\r\n\r\n      const response = await apiService.bulkImport(toPathType(importType), formData);\r\n      setImportStatus(response);\r\n      \r\n      if (response.status === 'PROCESSING') {\r\n        // Poll for status updates\r\n        pollImportStatus(response.importId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Import error:', error);\r\n      alert('Import failed: ' + error.message);\r\n    } finally {\r\n      setIsImporting(false);\r\n    }\r\n  };\r\n\r\n  const pollImportStatus = async (importId) => {\r\n    const maxAttempts = 30; // 5 minutes with 10-second intervals\r\n    let attempts = 0;\r\n\r\n    const poll = async () => {\r\n      try {\r\n        const status = await apiService.getImportStatus(importId);\r\n        setImportStatus(status);\r\n\r\n        if (status.status === 'COMPLETED' || status.status === 'FAILED') {\r\n          return;\r\n        }\r\n\r\n        attempts++;\r\n        if (attempts < maxAttempts) {\r\n          setTimeout(poll, 10000); // Poll every 10 seconds\r\n        }\r\n      } catch (error) {\r\n        console.error('Error polling import status:', error);\r\n      }\r\n    };\r\n\r\n    setTimeout(poll, 10000);\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      const response = await apiService.bulkExport(toPathType(importType), exportFilters);\r\n      \r\n      const isExcel = exportFilters.format === 'EXCEL';\r\n      const blob = new Blob([response], { \r\n        type: isExcel\r\n          ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n          : 'text/csv;charset=utf-8'\r\n      });\r\n      \r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      const ext = isExcel ? 'xlsx' : 'csv';\r\n      a.download = `${importType.toLowerCase()}_export_${Date.now()}.${ext}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Export error:', error);\r\n      alert('Export failed: ' + error.message);\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const handleBulkAssignment = async () => {\r\n    try {\r\n      let response;\r\n      if (assignmentData.assignmentType === 'MANUAL') {\r\n        // Prefer names+email if provided\r\n        if (assignmentData.farmerNames?.trim() && assignmentData.employeeEmail?.trim()) {\r\n          const names = assignmentData.farmerNames.split(',').map(n => n.trim()).filter(Boolean);\r\n          response = await apiService.bulkAssignFarmersByNames(names, assignmentData.employeeEmail.trim());\r\n        } else if (assignmentData.farmerIds.length && assignmentData.employeeId) {\r\n          response = await apiService.bulkAssignFarmersToEmployee(assignmentData.farmerIds, assignmentData.employeeId);\r\n        } else {\r\n          alert('Enter farmer names and employee email (or legacy IDs).');\r\n          return;\r\n        }\r\n      } else if (assignmentData.assignmentType === 'LOCATION') {\r\n        if (!assignmentData.location?.trim()) {\r\n          alert('Enter a district (location).');\r\n          return;\r\n        }\r\n        // Prefer email if present\r\n        if (assignmentData.employeeEmail?.trim()) {\r\n          response = await apiService.bulkAssignFarmersByLocation(assignmentData.location.trim(), assignmentData.employeeEmail.trim());\r\n        } else if (assignmentData.employeeId) {\r\n          response = await apiService.bulkAssignFarmersByLocation(assignmentData.location.trim(), assignmentData.employeeId);\r\n        } else {\r\n          alert('Enter employee email (preferred) or employee ID.');\r\n          return;\r\n        }\r\n      } else if (assignmentData.assignmentType === 'ROUND_ROBIN') {\r\n        response = await apiService.bulkAssignFarmersRoundRobin(assignmentData.farmerIds);\r\n      } else {\r\n        throw new Error('Invalid assignment type');\r\n      }\r\n      alert('Bulk assignment completed successfully');\r\n    } catch (error) {\r\n      console.error('Bulk assignment error:', error);\r\n      alert('Bulk assignment failed: ' + (error.response?.data || error.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bulk-operations\">\r\n      <div className=\"bulk-header\">\r\n        <h2>Bulk Operations</h2>\r\n        <p>Import and export large datasets efficiently</p>\r\n      </div>\r\n\r\n      <div className=\"bulk-tabs\">\r\n        <button \r\n          className={`tab ${activeTab === 'import' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('import')}\r\n        >\r\n          📥 Bulk Import\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'export' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('export')}\r\n        >\r\n          📤 Bulk Export\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'assignment' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('assignment')}\r\n        >\r\n          👥 Bulk Assignment\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"bulk-content\">\r\n        {activeTab === 'import' && (\r\n          <div className=\"import-section\">\r\n            <div className=\"section-header\">\r\n              <h3>Bulk Import</h3>\r\n              <div className=\"template-downloads\">\r\n                <button \r\n                  className=\"template-btn\"\r\n                  onClick={() => downloadTemplate('FARMER')}\r\n                >\r\n                  📄 Download Farmer Template\r\n                </button>\r\n                {userRole === 'SUPER_ADMIN' && (\r\n                  <button \r\n                    className=\"template-btn\"\r\n                    onClick={() => downloadTemplate('EMPLOYEE')}\r\n                  >\r\n                    📄 Download Employee Template\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"import-form\">\r\n              <div className=\"form-group\">\r\n                <label>Import Type:</label>\r\n                <select \r\n                  value={importType} \r\n                  onChange={(e) => setImportType(e.target.value)}\r\n                >\r\n                  <option value=\"FARMER\">Farmer Data</option>\r\n                  {userRole === 'SUPER_ADMIN' && (\r\n                    <option value=\"EMPLOYEE\">Employee Data</option>\r\n                  )}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Select File:</label>\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  onChange={handleFileSelect}\r\n                  accept=\".xlsx,.xls,.csv\"\r\n                  className=\"file-input\"\r\n                />\r\n                {selectedFile && (\r\n                  <p className=\"file-info\">\r\n                    Selected: {selectedFile.name} ({(selectedFile.size / 1024 / 1024).toFixed(2)} MB)\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <button \r\n                className=\"import-btn\"\r\n                onClick={handleImport}\r\n                disabled={!selectedFile || isImporting}\r\n              >\r\n                {isImporting ? '🔄 Importing...' : '📥 Start Import'}\r\n              </button>\r\n            </div>\r\n\r\n            {importStatus && (\r\n              <div className={`import-status ${importStatus.status.toLowerCase()}`}>\r\n                <h4>Import Status: {importStatus.status}</h4>\r\n                <div className=\"status-details\">\r\n                  <p><strong>Total Records:</strong> {importStatus.totalRecords || 0}</p>\r\n                  <p><strong>Successful:</strong> {importStatus.successfulImports || 0}</p>\r\n                  <p><strong>Failed:</strong> {importStatus.failedImports || 0}</p>\r\n                  <p><strong>Skipped:</strong> {importStatus.skippedRecords || 0}</p>\r\n                  {importStatus.message && (\r\n                    <p><strong>Message:</strong> {importStatus.message}</p>\r\n                  )}\r\n                </div>\r\n                \r\n                {importStatus.errors && importStatus.errors.length > 0 && (\r\n                  <div className=\"import-errors\">\r\n                    <h5>Errors ({importStatus.errors.length}):</h5>\r\n                    <div className=\"error-list\">\r\n                      {importStatus.errors.slice(0, 10).map((error, index) => (\r\n                        <div key={index} className=\"error-item\">\r\n                          <span>Row {error.rowNumber}: {error.fieldName}</span>\r\n                          <span>{error.errorMessage}</span>\r\n                        </div>\r\n                      ))}\r\n                      {importStatus.errors.length > 10 && (\r\n                        <p>... and {importStatus.errors.length - 10} more errors</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'export' && (\r\n          <div className=\"export-section\">\r\n            <div className=\"section-header\">\r\n              <h3>Bulk Export</h3>\r\n            </div>\r\n\r\n            <div className=\"export-form\">\r\n              <div className=\"form-group\">\r\n                <label>Export Type:</label>\r\n                <select \r\n                  value={importType} \r\n                  onChange={(e) => setImportType(e.target.value)}\r\n                >\r\n                  <option value=\"FARMER\">Farmer Data</option>\r\n                  {userRole === 'SUPER_ADMIN' && (\r\n                    <option value=\"EMPLOYEE\">Employee Data</option>\r\n                  )}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Format:</label>\r\n                <select \r\n                  value={exportFilters.format} \r\n                  onChange={(e) => setExportFilters({\r\n                    ...exportFilters, \r\n                    format: e.target.value\r\n                  })}\r\n                >\r\n                  <option value=\"EXCEL\">Excel (.xlsx)</option>\r\n                  <option value=\"CSV\">CSV (.csv)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Assigned Employee Email:</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={exportFilters.assignedEmployeeEmail}\r\n                  onChange={(e) => setExportFilters({\r\n                    ...exportFilters, \r\n                    assignedEmployeeEmail: e.target.value\r\n                  })}\r\n                  placeholder=\"Filter by assigned employee\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Location (District):</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={exportFilters.location}\r\n                  onChange={(e) => setExportFilters({\r\n                    ...exportFilters, \r\n                    location: e.target.value\r\n                  })}\r\n                  placeholder=\"Filter by district\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>KYC Status:</label>\r\n                <select \r\n                  value={exportFilters.kycStatus} \r\n                  onChange={(e) => setExportFilters({\r\n                    ...exportFilters, \r\n                    kycStatus: e.target.value\r\n                  })}\r\n                >\r\n                  <option value=\"\">All Statuses</option>\r\n                  <option value=\"PENDING\">Pending</option>\r\n                  <option value=\"APPROVED\">Approved</option>\r\n                  <option value=\"REJECTED\">Rejected</option>\r\n                  <option value=\"REFER_BACK\">Refer Back</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                  <label>From Date:</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={exportFilters.fromDate}\r\n                    onChange={(e) => setExportFilters({\r\n                      ...exportFilters, \r\n                      fromDate: e.target.value\r\n                    })}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>To Date:</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={exportFilters.toDate}\r\n                    onChange={(e) => setExportFilters({\r\n                      ...exportFilters, \r\n                      toDate: e.target.value\r\n                    })}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                className=\"export-btn\"\r\n                onClick={handleExport}\r\n                disabled={isExporting}\r\n              >\r\n                {isExporting ? '🔄 Exporting...' : '📤 Export Data'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'assignment' && (\r\n          <div className=\"assignment-section\">\r\n            <div className=\"section-header\">\r\n              <h3>Bulk Assignment</h3>\r\n            </div>\r\n\r\n            <div className=\"assignment-form\">\r\n              <div className=\"form-group\">\r\n                <label>Assignment Type:</label>\r\n                <select \r\n                  value={assignmentData.assignmentType} \r\n                  onChange={(e) => setAssignmentData({\r\n                    ...assignmentData, \r\n                    assignmentType: e.target.value\r\n                  })}\r\n                >\r\n                  <option value=\"MANUAL\">Manual Assignment</option>\r\n                  <option value=\"LOCATION\">By Location</option>\r\n                  <option value=\"ROUND_ROBIN\">Round Robin</option>\r\n                </select>\r\n              </div>\r\n\r\n              {assignmentData.assignmentType === 'MANUAL' && (\r\n                <>\r\n                  <div className=\"form-group\">\r\n                    <label>Farmer Names (comma-separated):</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={assignmentData.farmerNames}\r\n                      onChange={(e) => setAssignmentData({\r\n                        ...assignmentData, \r\n                        farmerNames: e.target.value\r\n                      })}\r\n                      placeholder=\"Krishna Kumar, suman kurrapati, ...\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Employee Email:</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={assignmentData.employeeEmail}\r\n                      onChange={(e) => setAssignmentData({\r\n                        ...assignmentData, \r\n                        employeeEmail: e.target.value\r\n                      })}\r\n                      placeholder=\"employee@example.com\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Farmer IDs (legacy, optional):</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={assignmentData.farmerIds.join(',')}\r\n                      onChange={(e) => setAssignmentData({\r\n                        ...assignmentData, \r\n                        farmerIds: e.target.value.split(',').map(id => id.trim()).filter(id => id)\r\n                      })}\r\n                      placeholder=\"1, 2, 3, 4, 5\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Employee ID (legacy, optional):</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={assignmentData.employeeId}\r\n                      onChange={(e) => setAssignmentData({\r\n                        ...assignmentData, \r\n                        employeeId: e.target.value\r\n                      })}\r\n                      placeholder=\"123\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {assignmentData.assignmentType === 'LOCATION' && (\r\n                <>\r\n                  <div className=\"form-group\">\r\n                    <label>Location (District):</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={assignmentData.location}\r\n                      onChange={(e) => setAssignmentData({\r\n                        ...assignmentData, \r\n                        location: e.target.value\r\n                      })}\r\n                      placeholder=\"kadapa\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Employee Email (preferred):</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={assignmentData.employeeEmail}\r\n                      onChange={(e) => setAssignmentData({\r\n                        ...assignmentData, \r\n                        employeeEmail: e.target.value\r\n                      })}\r\n                      placeholder=\"employee@example.com\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {assignmentData.assignmentType === 'ROUND_ROBIN' && (\r\n                <div className=\"form-group\">\r\n                  <label>Farmer IDs (comma-separated):</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={assignmentData.farmerIds.join(',')}\r\n                    onChange={(e) => setAssignmentData({\r\n                      ...assignmentData, \r\n                      farmerIds: e.target.value.split(',').map(id => id.trim()).filter(id => id)\r\n                    })}\r\n                    placeholder=\"1, 2, 3, 4, 5\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {assignmentData.assignmentType !== 'ROUND_ROBIN' && (\r\n                <></>\r\n              )}\r\n\r\n              <button \r\n                className=\"assignment-btn\"\r\n                onClick={handleBulkAssignment}\r\n              >\r\n                👥 Assign Farmers\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BulkOperations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}