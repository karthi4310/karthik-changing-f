{"ast":null,"code":"import React,{useState,useContext}from'react';import{useNavigate}from'react-router-dom';import{AuthContext}from'../contexts/AuthContext';import{authAPI}from'../api/apiService';import logo from'../assets/rightlogo.png';import'../styles/Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const generateCaptcha=()=>{// Random captcha generation\nconst chars='abcdefghijklmnopqrstuvwxyz0123456789';let captcha='';for(let i=0;i<5;i++){captcha+=chars.charAt(Math.floor(Math.random()*chars.length));}return captcha;};const Login=()=>{const{login}=useContext(AuthContext);const[userName,setUserName]=useState('');const[password,setPassword]=useState('');const[loginType,setLoginType]=useState('official');// 'official', 'fpo', 'employee', 'farmer'\nconst[captcha,setCaptcha]=useState('');const[captchaValue,setCaptchaValue]=useState(generateCaptcha());const[showPassword,setShowPassword]=useState(false);const[error,setError]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const handleLoginType=type=>{setLoginType(type);setError('');setCaptcha('');setCaptchaValue(generateCaptcha());};const handleRefreshCaptcha=()=>{setCaptchaValue(generateCaptcha());setCaptcha('');};const handleSubmit=async e=>{e.preventDefault();setError('');setLoading(true);if(captcha.trim().toLowerCase()!==captchaValue.toLowerCase()){setError('Captcha does not match.');setLoading(false);setCaptchaValue(generateCaptcha());setCaptcha('');return;}try{const loginData={userName,password};const response=await authAPI.login(loginData);console.log('Login - Full login response:',response);console.log('Login - Login response data keys:',Object.keys(response||{}));const{token}=response;try{var _user$role,_user$role$toUpperCas,_user$role$toUpperCas2,_user$role$toUpperCas3,_user$role2,_user$role3,_user$role4,_user$role4$toUpperCa,_user$role4$toUpperCa2,_user$role4$toUpperCa3;// Get user profile with token\nconst userData=await authAPI.getProfile();console.log('Login - Profile response data:',userData);console.log('Login - Profile response data keys:',Object.keys(userData||{}));const user={userName:userData.userName||userName,name:userData.name,email:userData.email,role:userData.role,forcePasswordChange:userData.forcePasswordChange||false,status:userData.status};// For users with temporary passwords, force password change\nif(password.includes('Temp@')){user.forcePasswordChange=true;console.log('Login - Detected temporary password, forcing password change');}console.log('Login - User data from profile:',user);console.log('Login - User role from profile:',userData.role);login(user,token);// Check if user needs to change password (first time login with temp password)\nconsole.log('Login - Checking forcePasswordChange:',user.forcePasswordChange);console.log('Login - Password contains Temp@:',password.includes('Temp@'));if(user.forcePasswordChange){console.log('Login - Redirecting to change password page');navigate('/change-password');return;}// Role-based navigation after password change or normal login\nconsole.log('Login - User role for navigation:',user.role);console.log('Login - User role (normalized):',(_user$role=user.role)===null||_user$role===void 0?void 0:(_user$role$toUpperCas=_user$role.toUpperCase)===null||_user$role$toUpperCas===void 0?void 0:(_user$role$toUpperCas2=_user$role$toUpperCas.call(_user$role))===null||_user$role$toUpperCas2===void 0?void 0:(_user$role$toUpperCas3=_user$role$toUpperCas2.trim)===null||_user$role$toUpperCas3===void 0?void 0:_user$role$toUpperCas3.call(_user$role$toUpperCas2));console.log('Login - User role type:',typeof user.role);console.log('Login - User role length:',(_user$role2=user.role)===null||_user$role2===void 0?void 0:_user$role2.length);console.log('Login - User role includes spaces:',(_user$role3=user.role)===null||_user$role3===void 0?void 0:_user$role3.includes(' '));const normalizedRole=((_user$role4=user.role)===null||_user$role4===void 0?void 0:(_user$role4$toUpperCa=_user$role4.toUpperCase)===null||_user$role4$toUpperCa===void 0?void 0:(_user$role4$toUpperCa2=_user$role4$toUpperCa.call(_user$role4))===null||_user$role4$toUpperCa2===void 0?void 0:(_user$role4$toUpperCa3=_user$role4$toUpperCa2.trim)===null||_user$role4$toUpperCa3===void 0?void 0:_user$role4$toUpperCa3.call(_user$role4$toUpperCa2))||'';console.log('Login - Normalized role:',normalizedRole);console.log('Login - Normalized role === ADMIN:',normalizedRole==='ADMIN');console.log('Login - Normalized role === SUPER_ADMIN:',normalizedRole==='SUPER_ADMIN');if(normalizedRole==='SUPER_ADMIN'){console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');navigate('/super-admin/dashboard');}else if(normalizedRole==='ADMIN'){console.log('Login - Redirecting ADMIN to /admin/dashboard');navigate('/admin/dashboard');}else if(normalizedRole==='EMPLOYEE'){console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');navigate('/employee/dashboard');}else{console.log('Login - Redirecting FARMER to /dashboard');navigate('/dashboard');}}catch(profileErr){var _response$data,_response$data2,_response$data3,_response$data4,_response$data5,_role,_role$toUpperCase,_role$toUpperCase$cal,_role$toUpperCase$cal2;console.log('Profile fetch failed, trying alternative methods');console.log('Profile error:',profileErr);// Try to get role from login response first\nlet role=(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.role;let forcePasswordChange=((_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.forcePasswordChange)||false;// For users with temporary passwords, force password change\nif(password.includes('Temp@')){forcePasswordChange=true;console.log('Login - Detected temporary password, forcing password change');}// If role is not in login response, try to get it from the backend\nif(!role){try{console.log('Login - Trying to get role from /auth/me endpoint');const meResponse=await authAPI.getProfile();console.log('Login - /auth/me response:',meResponse);role=meResponse===null||meResponse===void 0?void 0:meResponse.role;console.log('Login - Role from /auth/me:',role);}catch(meErr){console.log('Login - /auth/me failed:',meErr);// Try another common endpoint\ntry{console.log('Login - Trying to get role from /api/auth/users/profile endpoint');const altProfileResponse=await authAPI.getProfile();console.log('Login - /api/auth/users/profile response:',altProfileResponse);role=altProfileResponse===null||altProfileResponse===void 0?void 0:altProfileResponse.role;console.log('Login - Role from /api/auth/users/profile:',role);}catch(altErr){console.log('Login - /api/auth/users/profile failed:',altErr);}}}// If still no role, try to determine from username or use a default\nif(!role){console.log('Login - No role found, trying to determine from username');console.log('Login - Username being checked:',userName);// Check if username contains admin indicators\nconst lowerUserName=userName.toLowerCase();// Specific username mapping for known accounts\nconst superAdminUsernames=['projecthinfintiy@12.in','superadmin@hinfinity.in'];const adminUsernames=['karthik.m@hinfinity.in','admin@hinfinity.in'];const employeeUsernames=['employee@hinfinity.in','emp@hinfinity.in','testemployee@hinfinity.in','hari2912@gmail.com','harish134@gmail.com','employee2@hinfinity.in','test@employee.com'];console.log('Login - Checking against employee usernames:',employeeUsernames);console.log('Login - Username in employee list?',employeeUsernames.includes(userName));if(superAdminUsernames.includes(userName)){role='SUPER_ADMIN';console.log('Login - Determined role as SUPER_ADMIN from specific username mapping');}else if(adminUsernames.includes(userName)){role='ADMIN';console.log('Login - Determined role as ADMIN from specific username mapping');}else if(employeeUsernames.includes(userName)){role='EMPLOYEE';console.log('Login - Determined role as EMPLOYEE from specific username mapping');console.log('Login - Employee username detected:',userName);}else{// Default to FARMER for unknown usernames\nrole='FARMER';console.log('Login - Defaulting to FARMER role for unknown username');}}const user={userName:userName,name:((_response$data3=response.data)===null||_response$data3===void 0?void 0:_response$data3.name)||userName,email:((_response$data4=response.data)===null||_response$data4===void 0?void 0:_response$data4.email)||userName,role:role,forcePasswordChange:forcePasswordChange,status:((_response$data5=response.data)===null||_response$data5===void 0?void 0:_response$data5.status)||'ACTIVE'};console.log('Login - Fallback user data:',user);login(user,token);if(user.forcePasswordChange){console.log('Login - Fallback: Redirecting to change password page');navigate('/change-password');return;}const normalizedRole=((_role=role)===null||_role===void 0?void 0:(_role$toUpperCase=_role.toUpperCase)===null||_role$toUpperCase===void 0?void 0:(_role$toUpperCase$cal=_role$toUpperCase.call(_role))===null||_role$toUpperCase$cal===void 0?void 0:(_role$toUpperCase$cal2=_role$toUpperCase$cal.trim)===null||_role$toUpperCase$cal2===void 0?void 0:_role$toUpperCase$cal2.call(_role$toUpperCase$cal))||'';console.log('Login - Fallback: Normalized role:',normalizedRole);if(normalizedRole==='SUPER_ADMIN'){console.log('Login - Fallback: Redirecting SUPER_ADMIN to /super-admin/dashboard');navigate('/super-admin/dashboard');}else if(normalizedRole==='ADMIN'){console.log('Login - Fallback: Redirecting ADMIN to /admin/dashboard');navigate('/admin/dashboard');}else if(normalizedRole==='EMPLOYEE'){console.log('Login - Fallback: Redirecting EMPLOYEE to /employee/dashboard');navigate('/employee/dashboard');}else{console.log('Login - Fallback: Redirecting FARMER to /dashboard');navigate('/dashboard');}}}catch(err){var _err$response,_err$response$data;console.error('Login error:',err);console.error('Login error response:',err.response);console.error('Login error message:',err.message);setError(`Login failed: ${((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||err.message||'Invalid credentials or server error.'}`);}finally{setLoading(false);}};const handleCreateAccount=()=>{if(loginType==='employee'){navigate('/register-employee',{state:{role:'EMPLOYEE'}});}else if(loginType==='farmer'){navigate('/register-farmer',{state:{role:'FARMER'}});}else if(loginType==='fpo'){navigate('/register-fpo',{state:{role:'FPO'}});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"nic-navbar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"nic-logo\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u090F\\u0928\\u0906\\u0908\\u0938\\u0940\"}),/*#__PURE__*/_jsx(\"div\",{className:\"nic-text\",children:\"National Informatics Centre\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-links\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"#dashboard\",children:\"Dashboard\"}),/*#__PURE__*/_jsx(\"span\",{className:\"nav-dot\",children:\"\\u2022\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#enrollment\",children:\"Check Enrollment Status\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"agri-stack-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"agri-stack-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"agri-text\",children:\"Digital\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stack-text\",children:\"Agristack\"}),/*#__PURE__*/_jsx(\"span\",{className:\"leaf-icon\",children:\"\\uD83C\\uDF3F\"})]}),/*#__PURE__*/_jsx(\"h2\",{className:\"registry-title\",children:\"India Farmer Registry\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"registry-info\",children:/*#__PURE__*/_jsx(\"p\",{className:\"registry-description\",children:\"Farmer Registry in India enables farmers to receive a unique Farmer ID to access government benefits. Register now to ensure seamless access to agricultural schemes and services!\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"help-desk\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Help Desk : 1800-425-1661\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"login-form-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-logo-section\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"DATE Logo\",className:\"date-logo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-text\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Digital Agristack Transaction Enterprises\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Empowering Agricultural Excellence\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-type-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Log In as\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-type-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:`toggle-btn ${loginType==='official'?'active':''}`,onClick:()=>handleLoginType('official'),children:\"Official\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:`toggle-btn ${loginType==='fpo'?'active':''}`,onClick:()=>handleLoginType('fpo'),children:\"FPO\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:`toggle-btn ${loginType==='employee'?'active':''}`,onClick:()=>handleLoginType('employee'),children:\"Employee\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:`toggle-btn ${loginType==='farmer'?'active':''}`,onClick:()=>handleLoginType('farmer'),children:\"Farmer\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"login-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-field\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Insert Registered Mobile Number as Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userName,onChange:e=>setUserName(e.target.value),required:true,disabled:loading,placeholder:\"Enter username\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-field\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Enter password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?\"text\":\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,disabled:loading,placeholder:\"Enter password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"eye-icon\",onClick:()=>setShowPassword(!showPassword),children:\"\\uD83D\\uDC41\\uFE0F\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"forgot-password\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/forgot-password\",children:\"Forgot Password?\"}),/*#__PURE__*/_jsx(\"span\",{className:\"separator\",children:\"|\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/forgot-userid\",children:\"Forgot User ID?\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"captcha-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Captcha\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"captcha-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"captcha-image\",children:/*#__PURE__*/_jsx(\"span\",{children:captchaValue})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"refresh-captcha\",onClick:handleRefreshCaptcha,children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:captcha,onChange:e=>setCaptcha(e.target.value),placeholder:\"Enter Captcha\",className:\"captcha-input\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-actions-row\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:loading,children:loading?'Logging in...':'Log In'}),(loginType==='employee'||loginType==='farmer'||loginType==='fpo')&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"create-account-btn\",onClick:handleCreateAccount,children:\"Create New user Acount\"})]})]})]})})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","authAPI","logo","jsx","_jsx","jsxs","_jsxs","generateCaptcha","chars","captcha","i","charAt","Math","floor","random","length","Login","login","userName","setUserName","password","setPassword","loginType","setLoginType","setCaptcha","captchaValue","setCaptchaValue","showPassword","setShowPassword","error","setError","loading","setLoading","navigate","handleLoginType","type","handleRefreshCaptcha","handleSubmit","e","preventDefault","trim","toLowerCase","loginData","response","console","log","Object","keys","token","_user$role","_user$role$toUpperCas","_user$role$toUpperCas2","_user$role$toUpperCas3","_user$role2","_user$role3","_user$role4","_user$role4$toUpperCa","_user$role4$toUpperCa2","_user$role4$toUpperCa3","userData","getProfile","user","name","email","role","forcePasswordChange","status","includes","toUpperCase","call","normalizedRole","profileErr","_response$data","_response$data2","_response$data3","_response$data4","_response$data5","_role","_role$toUpperCase","_role$toUpperCase$cal","_role$toUpperCase$cal2","data","meResponse","meErr","altProfileResponse","altErr","lowerUserName","superAdminUsernames","adminUsernames","employeeUsernames","err","_err$response","_err$response$data","message","handleCreateAccount","state","className","children","href","src","alt","onClick","onSubmit","value","onChange","target","required","disabled","placeholder"],"sources":["C:/karthik cc/Working-frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { authAPI } from '../api/apiService';\r\nimport logo from '../assets/rightlogo.png';\r\nimport '../styles/Login.css';\r\n\r\nconst generateCaptcha = () => {\r\n  // Random captcha generation\r\n  const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n  let captcha = '';\r\n  for (let i = 0; i < 5; i++) {\r\n    captcha += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return captcha;\r\n};\r\n\r\nconst Login = () => {\r\n  const { login } = useContext(AuthContext);\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginType, setLoginType] = useState('official'); // 'official', 'fpo', 'employee', 'farmer'\r\n  const [captcha, setCaptcha] = useState('');\r\n  const [captchaValue, setCaptchaValue] = useState(generateCaptcha());\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginType = (type) => {\r\n    setLoginType(type);\r\n    setError('');\r\n    setCaptcha('');\r\n    setCaptchaValue(generateCaptcha());\r\n  };\r\n\r\n  const handleRefreshCaptcha = () => {\r\n    setCaptchaValue(generateCaptcha());\r\n    setCaptcha('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    if (captcha.trim().toLowerCase() !== captchaValue.toLowerCase()) {\r\n      setError('Captcha does not match.');\r\n      setLoading(false);\r\n      setCaptchaValue(generateCaptcha());\r\n      setCaptcha('');\r\n      return;\r\n    }\r\n    try {\r\n      const loginData = { userName, password };\r\n      const response = await authAPI.login(loginData);\r\n      console.log('Login - Full login response:', response);\r\n      console.log('Login - Login response data keys:', Object.keys(response || {}));\r\n      const { token } = response;\r\n      try {\r\n        // Get user profile with token\r\n        const userData = await authAPI.getProfile();\r\n        console.log('Login - Profile response data:', userData);\r\n        console.log('Login - Profile response data keys:', Object.keys(userData || {}));\r\n        const user = {\r\n          userName: userData.userName || userName,\r\n          name: userData.name,\r\n          email: userData.email,\r\n          role: userData.role,\r\n          forcePasswordChange: userData.forcePasswordChange || false,\r\n          status: userData.status\r\n        };\r\n        \r\n        // For users with temporary passwords, force password change\r\n        if (password.includes('Temp@')) {\r\n          user.forcePasswordChange = true;\r\n          console.log('Login - Detected temporary password, forcing password change');\r\n        }\r\n        \r\n        console.log('Login - User data from profile:', user);\r\n        console.log('Login - User role from profile:', userData.role);\r\n        login(user, token);\r\n        \r\n        // Check if user needs to change password (first time login with temp password)\r\n        console.log('Login - Checking forcePasswordChange:', user.forcePasswordChange);\r\n        console.log('Login - Password contains Temp@:', password.includes('Temp@'));\r\n        \r\n        if (user.forcePasswordChange) {\r\n          console.log('Login - Redirecting to change password page');\r\n          navigate('/change-password');\r\n          return;\r\n        }\r\n        \r\n        // Role-based navigation after password change or normal login\r\n        console.log('Login - User role for navigation:', user.role);\r\n        console.log('Login - User role (normalized):', user.role?.toUpperCase?.()?.trim?.());\r\n        console.log('Login - User role type:', typeof user.role);\r\n        console.log('Login - User role length:', user.role?.length);\r\n        console.log('Login - User role includes spaces:', user.role?.includes(' '));\r\n        \r\n        const normalizedRole = user.role?.toUpperCase?.()?.trim?.() || '';\r\n        console.log('Login - Normalized role:', normalizedRole);\r\n        console.log('Login - Normalized role === ADMIN:', normalizedRole === 'ADMIN');\r\n        console.log('Login - Normalized role === SUPER_ADMIN:', normalizedRole === 'SUPER_ADMIN');\r\n        \r\n        if (normalizedRole === 'SUPER_ADMIN') {\r\n          console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');\r\n          navigate('/super-admin/dashboard');\r\n        } else if (normalizedRole === 'ADMIN') {\r\n          console.log('Login - Redirecting ADMIN to /admin/dashboard');\r\n          navigate('/admin/dashboard');\r\n        } else if (normalizedRole === 'EMPLOYEE') {\r\n          console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');\r\n          navigate('/employee/dashboard');\r\n        } else {\r\n          console.log('Login - Redirecting FARMER to /dashboard');\r\n          navigate('/dashboard');\r\n        }\r\n      } catch (profileErr) {\r\n        console.log('Profile fetch failed, trying alternative methods');\r\n        console.log('Profile error:', profileErr);\r\n        \r\n        // Try to get role from login response first\r\n        let role = response.data?.role;\r\n        let forcePasswordChange = response.data?.forcePasswordChange || false;\r\n        \r\n        // For users with temporary passwords, force password change\r\n        if (password.includes('Temp@')) {\r\n          forcePasswordChange = true;\r\n          console.log('Login - Detected temporary password, forcing password change');\r\n        }\r\n        \r\n        // If role is not in login response, try to get it from the backend\r\n        if (!role) {\r\n          try {\r\n            console.log('Login - Trying to get role from /auth/me endpoint');\r\n            const meResponse = await authAPI.getProfile();\r\n            console.log('Login - /auth/me response:', meResponse);\r\n            role = meResponse?.role;\r\n            console.log('Login - Role from /auth/me:', role);\r\n          } catch (meErr) {\r\n            console.log('Login - /auth/me failed:', meErr);\r\n            \r\n            // Try another common endpoint\r\n            try {\r\n              console.log('Login - Trying to get role from /api/auth/users/profile endpoint');\r\n              const altProfileResponse = await authAPI.getProfile();\r\n              console.log('Login - /api/auth/users/profile response:', altProfileResponse);\r\n              role = altProfileResponse?.role;\r\n              console.log('Login - Role from /api/auth/users/profile:', role);\r\n            } catch (altErr) {\r\n              console.log('Login - /api/auth/users/profile failed:', altErr);\r\n            }\r\n          }\r\n        }\r\n        \r\n        // If still no role, try to determine from username or use a default\r\n        if (!role) {\r\n          console.log('Login - No role found, trying to determine from username');\r\n          console.log('Login - Username being checked:', userName);\r\n          // Check if username contains admin indicators\r\n          const lowerUserName = userName.toLowerCase();\r\n          \r\n          // Specific username mapping for known accounts\r\n          const superAdminUsernames = [\r\n            'projecthinfintiy@12.in',\r\n            'superadmin@hinfinity.in'\r\n          ];\r\n          \r\n          const adminUsernames = [\r\n            'karthik.m@hinfinity.in',\r\n            'admin@hinfinity.in'\r\n          ];\r\n          \r\n          const employeeUsernames = [\r\n            'employee@hinfinity.in',\r\n            'emp@hinfinity.in',\r\n            'testemployee@hinfinity.in',\r\n            'hari2912@gmail.com',\r\n            'harish134@gmail.com',\r\n            'employee2@hinfinity.in',\r\n            'test@employee.com'\r\n          ];\r\n          \r\n          console.log('Login - Checking against employee usernames:', employeeUsernames);\r\n          console.log('Login - Username in employee list?', employeeUsernames.includes(userName));\r\n          \r\n          if (superAdminUsernames.includes(userName)) {\r\n            role = 'SUPER_ADMIN';\r\n            console.log('Login - Determined role as SUPER_ADMIN from specific username mapping');\r\n          } else if (adminUsernames.includes(userName)) {\r\n            role = 'ADMIN';\r\n            console.log('Login - Determined role as ADMIN from specific username mapping');\r\n          } else if (employeeUsernames.includes(userName)) {\r\n            role = 'EMPLOYEE';\r\n            console.log('Login - Determined role as EMPLOYEE from specific username mapping');\r\n            console.log('Login - Employee username detected:', userName);\r\n          } else {\r\n            // Default to FARMER for unknown usernames\r\n            role = 'FARMER';\r\n            console.log('Login - Defaulting to FARMER role for unknown username');\r\n          }\r\n        }\r\n        \r\n        const user = {\r\n          userName: userName,\r\n          name: response.data?.name || userName,\r\n          email: response.data?.email || userName,\r\n          role: role,\r\n          forcePasswordChange: forcePasswordChange,\r\n          status: response.data?.status || 'ACTIVE'\r\n        };\r\n        \r\n        console.log('Login - Fallback user data:', user);\r\n        login(user, token);\r\n        \r\n        if (user.forcePasswordChange) {\r\n          console.log('Login - Fallback: Redirecting to change password page');\r\n          navigate('/change-password');\r\n          return;\r\n        }\r\n        \r\n        const normalizedRole = role?.toUpperCase?.()?.trim?.() || '';\r\n        console.log('Login - Fallback: Normalized role:', normalizedRole);\r\n        \r\n        if (normalizedRole === 'SUPER_ADMIN') {\r\n          console.log('Login - Fallback: Redirecting SUPER_ADMIN to /super-admin/dashboard');\r\n          navigate('/super-admin/dashboard');\r\n        } else if (normalizedRole === 'ADMIN') {\r\n          console.log('Login - Fallback: Redirecting ADMIN to /admin/dashboard');\r\n          navigate('/admin/dashboard');\r\n        } else if (normalizedRole === 'EMPLOYEE') {\r\n          console.log('Login - Fallback: Redirecting EMPLOYEE to /employee/dashboard');\r\n          navigate('/employee/dashboard');\r\n        } else {\r\n          console.log('Login - Fallback: Redirecting FARMER to /dashboard');\r\n          navigate('/dashboard');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      console.error('Login error response:', err.response);\r\n      console.error('Login error message:', err.message);\r\n      setError(`Login failed: ${err.response?.data?.message || err.message || 'Invalid credentials or server error.'}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateAccount = () => {\r\n    if (loginType === 'employee') {\r\n      navigate('/register-employee', { state: { role: 'EMPLOYEE' } });\r\n    } else if (loginType === 'farmer') {\r\n      navigate('/register-farmer', { state: { role: 'FARMER' } });\r\n    } else if (loginType === 'fpo') {\r\n      navigate('/register-fpo', { state: { role: 'FPO' } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {/* Top Navigation Bar */}\r\n      <nav className=\"nic-navbar\">\r\n        <div className=\"nic-logo\">\r\n          <span>एनआईसी</span>\r\n          <div className=\"nic-text\">National Informatics Centre</div>\r\n        </div>\r\n        <div className=\"nav-links\">\r\n          <a href=\"#dashboard\">Dashboard</a>\r\n          <span className=\"nav-dot\">•</span>\r\n          <a href=\"#enrollment\">Check Enrollment Status</a>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"main-content\">\r\n        {/* Left Section - Information Panel */}\r\n        <div className=\"info-panel\">\r\n          <div className=\"agri-stack-header\">\r\n            <h1 className=\"agri-stack-title\">\r\n              <span className=\"agri-text\">Digital</span>\r\n              <span className=\"stack-text\">Agristack</span>\r\n              <span className=\"leaf-icon\">🌿</span>\r\n            </h1>\r\n            <h2 className=\"registry-title\">India Farmer Registry</h2>\r\n          </div>\r\n          <div className=\"registry-info\">\r\n            <p className=\"registry-description\">\r\n              Farmer Registry in India enables farmers to receive a unique Farmer ID to access government benefits. \r\n              Register now to ensure seamless access to agricultural schemes and services!\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"help-desk\">\r\n            <p>Help Desk : 1800-425-1661</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Section - Login Form */}\r\n        <div className=\"login-form-section\">\r\n          <div className=\"login-card\">\r\n            {/* DATE Logo at Top */}\r\n            <div className=\"date-logo-section\">\r\n              <img src={logo} alt=\"DATE Logo\" className=\"date-logo\" />\r\n              <div className=\"date-text\">\r\n                <h3>Digital Agristack Transaction Enterprises</h3>\r\n                <p>Empowering Agricultural Excellence</p>\r\n              </div>\r\n            </div>\r\n            {/* Login Type Section */}\r\n            <div className=\"login-type-section\">\r\n              <h3>Log In as</h3>\r\n              <div className=\"login-type-toggle\">\r\n                <button \r\n                  type=\"button\"\r\n                  className={`toggle-btn ${loginType === 'official' ? 'active' : ''}`}\r\n                  onClick={() => handleLoginType('official')}\r\n                >\r\n                  Official\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`toggle-btn ${loginType === 'fpo' ? 'active' : ''}`}\r\n                  onClick={() => handleLoginType('fpo')}\r\n                >\r\n                  FPO\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`toggle-btn ${loginType === 'employee' ? 'active' : ''}`}\r\n                  onClick={() => handleLoginType('employee')}\r\n                >\r\n                  Employee\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`toggle-btn ${loginType === 'farmer' ? 'active' : ''}`}\r\n                  onClick={() => handleLoginType('farmer')}\r\n                >\r\n                  Farmer\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"login-form\">\r\n              {/* Username Field */}\r\n              <div className=\"form-field\">\r\n                <label>Insert Registered Mobile Number as Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={userName}\r\n                  onChange={e => setUserName(e.target.value)}\r\n                  required\r\n                  disabled={loading}\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </div>\r\n\r\n              {/* Password Field */}\r\n              <div className=\"form-field\">\r\n                <label>Enter password</label>\r\n                <div className=\"password-input-container\">\r\n                  <input\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    required\r\n                    disabled={loading}\r\n                    placeholder=\"Enter password\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"eye-icon\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                  >\r\n                    👁️\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Forgot Password Link */}\r\n              <div className=\"forgot-password\">\r\n                <a href=\"/forgot-password\">Forgot Password?</a>\r\n                <span className=\"separator\">|</span>\r\n                <a href=\"/forgot-userid\">Forgot User ID?</a>\r\n              </div>\r\n\r\n              {/* Captcha Section */}\r\n              <div className=\"captcha-section\">\r\n                <label>Captcha</label>\r\n                <div className=\"captcha-container\">\r\n                  <div className=\"captcha-image\">\r\n                    <span>{captchaValue}</span>\r\n                  </div>\r\n                  <button type=\"button\" className=\"refresh-captcha\" onClick={handleRefreshCaptcha}>\r\n                    🔄\r\n                  </button>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={captcha}\r\n                    onChange={e => setCaptcha(e.target.value)}\r\n                    placeholder=\"Enter Captcha\"\r\n                    className=\"captcha-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {error && <div className=\"error-message\">{error}</div>}\r\n              \r\n              <div className=\"login-actions-row\">\r\n                <button type=\"submit\" className=\"login-btn\" disabled={loading}>\r\n                  {loading ? 'Logging in...' : 'Log In'}\r\n                </button>\r\n                {(loginType === 'employee' || loginType === 'farmer' || loginType === 'fpo') && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"create-account-btn\"\r\n                    onClick={handleCreateAccount}\r\n                  >\r\n                    Create New user Acount\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}